<?php
/*--------------------------------------------------*/
/* FILE GENERATED BY INVISION POWER BOARD 3         */
/* CACHE FILE: Skin set id: 2               */
/* CACHE FILE: Generated: Mon, 10 Jun 2013 14:58:19 GMT */
/* DO NOT EDIT DIRECTLY - THE CHANGES WILL NOT BE   */
/* WRITTEN TO THE DATABASE AUTOMATICALLY            */
/*--------------------------------------------------*/

class skin_profile_2 extends skinMaster{

/**
* Construct
*/
function __construct( ipsRegistry $registry )
{
	parent::__construct( $registry );
	

$this->_funcHooks = array();
$this->_funcHooks['acknowledgeWarning'] = array('valueIsPermanent','hasValue','options','memberNote','hasReasonAndContent','hasContent','hasReason','hasExpireDate','hasExpiration','hasPoints','isVerbalWarning','valueIsPermanent','hasValue','options','warningsAcknowledgeMessage','memberNote','hasReasonAndContent','hasContent','hasReason','hasExpireDate','hasExpiration','hasPoints','isVerbalWarning','warningsAcknowledge');
$this->_funcHooks['addWarning'] = array('reasons','canUseAsBanGroup','banGroups','hasOtherOption','currentMq','currentRpa','currentSuspend','reasons','canUseAsBanGroup','banGroups','hasOtherOption','currentMq','currentRpa','currentSuspend');
$this->_funcHooks['customField__gender'] = array('male','female','nottelling','gender_set','male','female','nottelling','gender_set');
$this->_funcHooks['customField__generic'] = array('genericIsArray','genericIsArray');
$this->_funcHooks['customFieldGroup__contact'] = array('cfieldgroups','cf_icon','cf_skype','cf_jabber','cf_website','cf_icq','cf_yahoo','cf_msn','cf_aim','cf_array','contact_field','cfieldgroups','cf_icon','cf_skype','cf_jabber','cf_website','cf_icq','cf_yahoo','cf_msn','cf_aim','cf_array','contact_field');
$this->_funcHooks['customizeProfile'] = array('hasBackgroundColor','backgroundIsFixed','hasBackgroundImage','hasBodyCustomization','hasBackgroundColor','backgroundIsFixed','hasBackgroundImage','hasBodyCustomization');
$this->_funcHooks['dnameWrapper'] = array('records','isAjaxModule','hasDnameHistory','records','isAjaxModule','hasDnameHistory');
$this->_funcHooks['explainPoints'] = array('reasons','valueIsPermanent','hasValue','options','actions','hasActions','reasons','valueIsPermanent','hasValue','options','actions','hasActions');
$this->_funcHooks['friendsList'] = array('norep','posrep','negrep','repson','weAreSupmod','addfriend','notus','sendpm','blog','gallery','norep','posrep','negrep','repson','loopOnPending','friendsList','friendListPages','tabIsList','tabIsPending','friendListNone','hasFriendsList','friendListPagesBottom','friendListRate1','friendListRate2','friendListRate3','friendListRate4','friendListRate5','friendListRate','friendListRepPos','friendListRepNeg','friendListRepZero','friendListRep','friendListIsFriend','friendListIsMember','friendListSendPm','friendListSearchType','friendListBlog','friendListGallery','friendListRateApp1','friendListRateApp2','friendListRateApp3','friendListRateApp4','friendListRateApp5','friendListAllowRate','friendListAppRepPos','friendListAppRepNeg','friendListAppRepZero','friendListAppRep','loopOnPending','friendsList','friendListPages','tabIsList','tabIsPending','friendListNone','hasFriendsList','friendListPagesBottom');
$this->_funcHooks['listWarnings'] = array('hasReason','warnings','paginationTop','canWarn','hasPaginationOrWarn','noWarnings','paginationBottom','hasReason','warnings','paginationTop','canWarn','hasPaginationOrWarn','noWarnings','paginationBottom');
$this->_funcHooks['photoEditor'] = array('canHasUpload','canHasURL','allowGravatars','hasTwitter','hasFacebook');
$this->_funcHooks['profileModern'] = array('tabactive','tabs','warnClickable','warnPopup','warnIsSet','warnsLoop','pcfieldsLoop','pcfieldsOtherLoopCheckInner','pcfieldsOtherLoopCheck2','pcfieldsOtherLoopCheck','pcfieldsOtherLoop','cfields','friendsLoop','visitorismember','latest_visitors_loop','jsIsFriend','friendsEnabled','hasCustomization','weAreSupmod','weAreOwner','supModCustomization','canEditUser','canEditPic','haswarn','hasWarns','onlineDetails','userStatus','rate1','rate2','rate3','rate4','rate5','rated1','rated2','rated3','rated4','rated5','hasrating','noRateYourself','allowRate','isFriend','noFriendYourself','pmlink','member_title','member_age','member_bday_year','member_birthday','pcfields','pcfieldsOther','showContactHead','isadmin','member_contact_fields','hasContactFields','RepPositive','RepNegative','RepZero','RepText','RepImage','ourReputation','authorspammerinner','authorspammer','dnameHistory','supModCustomizationDisable','checkModTools','hasFriends','has_visitors','latest_visitors','thisIsNotUs','authorspammerinner','authorspammer','member_title','member_age','member_bday_year','member_birthday','isFriend','noFriendYourself','pmlink');
$this->_funcHooks['reputationPage'] = array('isTheActiveApp','apps','hasMoreThanOneApp','hasResults','isTheActiveApp','apps','hasMoreThanOneApp','hasResults');
$this->_funcHooks['showCard'] = array('cardRepPos','cardRepNeg','cardRepZero','cardRep','cardSendPm','cardStatus','cardOnline','cardWhere','isadmin','authorspammerinner','authorspammer','cardIsFriend','cardFriend','cardBlog','cardGallery','cardStatus','cardOnline','cardWhere','isadmin','authorspammerinner','authorspammer','cardIsFriend','cardFriend','cardSendPm','cardFindPostsLink','cardBlog','cardGallery','cardRepPos','cardRepNeg','cardRepZero','cardRep');
$this->_funcHooks['statusReplies'] = array('canDelete','innerLoop','noWrapperTop','noWrapperBottom','canDelete','innerLoop');
$this->_funcHooks['statusUpdates'] = array('isUs','moderated','forSomeoneElse','noLocked','cImg','creatorText','canDelete','isLocked','canLock','isUnapproved','addReturn','hasMore','hasReplies','canReply','maxReplies','statusApproved','outerLoop','moderated','forSomeoneElse','statusApproved','outerLoop');
$this->_funcHooks['statusUpdatesPage'] = array('tabactive','tabactive2','updateTwitter','updateFacebook','update','canCreate','hasUpdates','hasPagination','hasUpdates');
$this->_funcHooks['tabFriends'] = array('friends','friends_loop','friends','friends','friends_loop','friends');
$this->_funcHooks['tabReputation'] = array('isTheActiveApp','apps','hasMoreThanOneApp','currentIsGiven','canViewRep','currentIsReceived','hasResults','bottomPagination','isTheActiveApp','apps','hasMoreThanOneApp','currentIsGiven','canViewRep','currentIsReceived','hasResults','bottomPagination');
$this->_funcHooks['tabReputation_calendar'] = array('postMid','postMember','postMid','postMember','postMid','postMember','postMid','postMember');
$this->_funcHooks['tabReputation_posts'] = array('notLastFtAsForum','topicsForumTrail','postMid','postMember','hasForumTrail','notLastFtAsForum','topicsForumTrail','postMid','postMember','hasForumTrail');
$this->_funcHooks['tabSingleColumn'] = array('singleColumnUrl','singleColumnTitle','date','singleColumnUrl','singleColumnTitle');
$this->_funcHooks['tabStatusUpdates'] = array('updateTwitter','updateFacebook','update','canCreate','leave_comment','hasUpdates','actions','canCreate','hasUpdates');


}

/* -- acknowledgeWarning --*/
function acknowledgeWarning($warning) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_profile', $this->_funcHooks['acknowledgeWarning'] ) )
{
$count_94b798f348ee0d696478020566a54fcc = is_array($this->functionData['acknowledgeWarning']) ? count($this->functionData['acknowledgeWarning']) : 0;
$this->functionData['acknowledgeWarning'][$count_94b798f348ee0d696478020566a54fcc]['warning'] = $warning;
}
$IPBHTML .= "<h2>{$this->lang->words['warnings_acknowledge']}</h2>
" . (($this->settings['warnings_acknowledge'] and !$warning['wl_acknowledged']) ? ("
	<p class='message'>{$this->lang->words['warnings_acknowledge_desc']}</p>
") : ("")) . "
<form action=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=members&module=profile&section=warnings&do=do_acknowledge", "public",'' ), "", "" ) . "\" method=\"post\">
	<input type='hidden' name='member' value='{$warning['wl_member']}' />
	<input type='hidden' name='id' value='{$warning['wl_id']}' />
	<input type='hidden' name='secure_key' value='{$this->member->form_hash}' />
	<input type='hidden' name='ref' value='{$_SERVER['HTTP_REFERER']}' />
	<div class='master_list'>
		" . (($warning['wl_note_member']) ? ("
			<div class='row'>
				{$warning['wl_note_member']}
			</div>
		") : ("")) . "
		<div class='row'>
			" . (($warning['wl_reason']) ? ("" . (($warning['content']) ? ("
					" . sprintf( $this->lang->words['warning_blurb_yy'], "" . ( method_exists( $this->registry->getClass('output')->getTemplate('global'), 'userHoverCard' ) ? $this->registry->getClass('output')->getTemplate('global')->userHoverCard($warning['wl_moderator']) : '' ) . "", $warning['wl_reason']['wr_name'], $warning['content'] ) . "
				") : ("
					" . sprintf( $this->lang->words['warning_blurb_yn'], "" . ( method_exists( $this->registry->getClass('output')->getTemplate('global'), 'userHoverCard' ) ? $this->registry->getClass('output')->getTemplate('global')->userHoverCard($warning['wl_moderator']) : '' ) . "", $warning['wl_reason']['wr_name'] ) . "
				")) . "") : ("" . (($warning['content']) ? ("
					" . sprintf( $this->lang->words['warning_blurb_ny'], "" . ( method_exists( $this->registry->getClass('output')->getTemplate('global'), 'userHoverCard' ) ? $this->registry->getClass('output')->getTemplate('global')->userHoverCard($warning['wl_moderator']) : '' ) . "", $warning['content'] ) . "
				") : ("
					" . sprintf( $this->lang->words['warning_blurb_nn'], "" . ( method_exists( $this->registry->getClass('output')->getTemplate('global'), 'userHoverCard' ) ? $this->registry->getClass('output')->getTemplate('global')->userHoverCard($warning['wl_moderator']) : '' ) . "" ) . "
				")) . "")) . "
			<br />
			" . ((!$warning['wl_points'] and !$warning['wl_mq'] and !$warning['wl_rpa'] and !$warning['suspend']) ? ("
				{$this->lang->words['warnings_verbal_only']}
			") : ("" . (($warning['wl_points']) ? ("" . (($warning['wl_expire']) ? ("" . (($warning['wl_expire_date']) ? ("
							" . sprintf( $this->lang->words['warnings_given_points_expire'], $warning['wl_points'], $this->lang->getDate( $warning['wl_expire_date'], 'SHORT' ) ) . "<br />
						") : ("
							" . sprintf( $this->lang->words['warnings_given_points_expired'], $warning['wl_points'] ) . "<br />
					")) . "") : ("
						" . sprintf( $this->lang->words['warnings_given_points'], $warning['wl_points'] ) . "<br />
					")) . "") : ("")) . "
				".$this->__f__7bdd74fea5ae711917a1f8087e24476c($warning)."")) . "
		</div>
	</div>
	" . (($this->settings['warnings_acknowledge'] and !$warning['wl_acknowledged']) ? ("
		<div class='controls'>
			<div class='buttons'>
				<input type='submit' class='button full_width' value='{$this->lang->words['warnings_acknowledge_confirm']}' />
			</div>
		</div>
	") : ("")) . "
</form>";
return $IPBHTML;
}


function __f__7bdd74fea5ae711917a1f8087e24476c($warning)
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( array( 'mq', 'rpa', 'suspend' ) as $k )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
					" . (($warning[ 'wl_' . $k ]) ? ("" . (($warning[ 'wl_' . $k ] == -1) ? ("
							" . sprintf( $this->lang->words[ 'warnings_' . $k ], $this->lang->words['warnings_permanently'] ) . "<br />
						") : ("
							" . sprintf( $this->lang->words[ 'warnings_' . $k ], sprintf( $this->lang->words['warnings_for'], $warning[ 'wl_' . $k ], $this->lang->words[ 'warnings_time_' . $warning[ 'wl_' . $k . '_unit' ] ] ) ) . "<br />
						")) . "") : ("")) . "
				
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

/* -- addWarning --*/
function addWarning($member, $reasons, $errors, $editor, $currentPunishments) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_profile', $this->_funcHooks['addWarning'] ) )
{
$count_eac0ed87a320e04bcb7e781075ba28ae = is_array($this->functionData['addWarning']) ? count($this->functionData['addWarning']) : 0;
$this->functionData['addWarning'][$count_eac0ed87a320e04bcb7e781075ba28ae]['member'] = $member;
$this->functionData['addWarning'][$count_eac0ed87a320e04bcb7e781075ba28ae]['reasons'] = $reasons;
$this->functionData['addWarning'][$count_eac0ed87a320e04bcb7e781075ba28ae]['errors'] = $errors;
$this->functionData['addWarning'][$count_eac0ed87a320e04bcb7e781075ba28ae]['editor'] = $editor;
$this->functionData['addWarning'][$count_eac0ed87a320e04bcb7e781075ba28ae]['currentPunishments'] = $currentPunishments;
}
$IPBHTML .= "" . $this->registry->getClass('output')->addJSModule("warn", "0" ) . "
<h1 class='ipsType_pagetitle'>" . sprintf( $this->lang->words['warnings_add_for'], $member['members_display_name'] ) . "</h1>
<br />
<form action='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=members&amp;module=profile&amp;section=warnings&amp;do=save&amp;member={$member['member_id']}", "public",'' ), "", "" ) . "' method='post'>
	<input type='hidden' name='from_app' value='{$this->request['from_app']}' />
	<input type='hidden' name='from_id1' value='{$this->request['from_id1']}' />
	<input type='hidden' name='from_id2' value='{$this->request['from_id2']}' />
	<div class='ipsBox'>
		<div class='ipsBox_container ipsPad'>
			<ul class='ipsForm ipsForm_vertical'>
				<li class='ipsField ipsField_select'>
					<label class='ipsField_title'>{$this->lang->words['warnings_reason']} <span class='ipsForm_required'>*</span></label>
					<div class='ipsField_content'>
						<select name='reason' id='reason-select'>
							<option value=''>{$this->lang->words['warnings_reason_select']}</option>
							".$this->__f__12865ad5bd3532d3ef88400b31bc953f($member,$reasons,$errors,$editor,$currentPunishments)."							" . (($this->settings['warnings_enable_other'] or $this->memberData['g_access_cp']) ? ("
								<option value='0'>{$this->lang->words['warnings_reasons_other']}</option>
							") : ("")) . "
						</select>
						<span class='error'>{$errors['reason']}</span>
					</div>
				</li>
				<li class='ipsField ipsField_select' style='display:none' id='points-li'>
					<label class='ipsField_title'>{$this->lang->words['warnings_points']} <span class='ipsForm_required'>*</span></label>
					<div class='ipsField_content'>
						<input name='points' class='input_text' size='5' id='points-field' />
						<a href='#' id='points-explain-button'><img src=\"{$this->settings['img_url']}/help.png\" alt='{$this->lang->words['warnings_points_explain']}' title='{$this->lang->words['warnings_points_explain']}' /></a>
						<span class='error'>{$errors['points']}</span>
					</div>
				</li>
				<li class='ipsField'>
					<label class='ipsField_title'>{$this->lang->words['warnings_note_member']}</label>
					<div class='ipsField_content'>
						{$editor['member']}
						<span class='error'>{$errors['note_member']}</span>
					</div>
					<span class='desc'>{$this->lang->words['warnings_note_member_desc']}</span>
					<br />
					<span class='error'>{$errors['note_member']}</span>
				</li>
				<li class='ipsField'>
					<label class='ipsField_title'>{$this->lang->words['warnings_note_mods']}</label>
					<div class='ipsField_content'>
						{$editor['mod']}
						<span class='error'>{$errors['note_member']}</span>
					</div>
					<span class='desc'>{$this->lang->words['warnings_note_mods_desc']}</span>
					<br />
					<span class='error'>{$errors['note_member']}</span>
				</li>
				<li class='ipsField' id='punishment_li'>
					<label class='ipsField_title'>{$this->lang->words['warnings_punishment']}</label>
					<div class='ipsField_content'>
						<p class='message unspecific'>
							<span id='specified-punishment'>{$this->lang->words['warnings_punishment_select']}</span>
							<br />
							<a href='#' class='ipsButton_secondary' id='change-punishment-button' style='display:none'>{$this->lang->words['warnings_verbal_change']}</a>
						</p>
					</div>
				</li>
				<li class='ipsField' style='display:none' id='mq_li'>
					<label class='ipsField_title'>{$this->lang->words['warnings_punishment_mq']}</label>
					<div class='ipsField_content'>
						" . (($currentPunishments['mq']) ? ("
							<span class='error'>{$currentPunishments['mq']}{$this->lang->words['warnings_already_change']}<br /></span>
						") : ("")) . "
						<input type='checkbox' name='mq_perm' id='mq_perm' /> <label for='mq_perm'>{$this->lang->words['warnings__permanently']}</label>
						<span id='mq_time'>{$this->lang->words['warnings_or_for']} <input name='mq' class='input_text' size='2' id='mq_input' /> <select name='mq_unit' id='mq_unit_select'><option value='d'>{$this->lang->words['warnings_time_d']}</option><option value='h'>{$this->lang->words['warnings_time_h']}</option></select></span>
					</div>
					<span class='desc'>{$this->lang->words['warnings_punishment_content_desc']}</span>
				</li>
				<li class='ipsField' style='display:none' id='rpa_li'>
					<label class='ipsField_title'>{$this->lang->words['warnings_punishment_rpa']}</label>
					<div class='ipsField_content'>
						" . (($currentPunishments['rpa']) ? ("
							<span class='error'>{$currentPunishments['rpa']}{$this->lang->words['warnings_already_change']}<br /></span>
						") : ("")) . "
						<input type='checkbox' name='rpa_perm' id='rpa_perm' /> <label for='rpa_perm'>{$this->lang->words['warnings__permanently']}</label>
						<span id='rpa_time'>{$this->lang->words['warnings_or_for']} <input name='rpa' class='input_text' size='2' id='rpa_input' /> <select name='rpa_unit' id='rpa_unit_select'><option value='d'>{$this->lang->words['warnings_time_d']}</option><option value='h'>{$this->lang->words['warnings_time_h']}</option></select></span>
					</div>
					<span class='desc'>{$this->lang->words['warnings_punishment_content_desc']}</span>
				</li>
				<li class='ipsField' style='display:none' id='suspend_li'>
					<label class='ipsField_title'>{$this->lang->words['warnings_punishment_suspend']}</label>
					<div class='ipsField_content'>
						" . (($currentPunishments['suspend']) ? ("
							<span class='error'>{$currentPunishments['suspend']}{$this->lang->words['warnings_already_change']}<br /></span>
						") : ("")) . "
						<input type='checkbox' name='suspend_perm' id='suspend_perm' /> <label for='suspend_perm'>{$this->lang->words['warnings__permanently']}</label>
						<span id='suspend_time'>{$this->lang->words['warnings_or_for']} <input name='suspend' class='input_text' size='2' id='suspend_input' /> <select name='suspend_unit' id='suspend_unit_select'><option value='d'>{$this->lang->words['warnings_time_d']}</option><option value='h'>{$this->lang->words['warnings_time_h']}</option></select></span>
						<br />
						<input type='checkbox' name='ban_group' id='ban_group' value='1' /> <label for='ban_group'>{$this->lang->words['warnings_ban_group']}</label>
						<select name='ban_group_id'>
						".$this->__f__5e813cfa3f05c3781dd0c1cf5cd90968($member,$reasons,$errors,$editor,$currentPunishments)."						</select>
					</div>
				</li>
				<li class='ipsField' style='display:none' id='remove-points-li'>
					<label class='ipsField_title'>{$this->lang->words['warnings_remove_points']}</label>
					<div class='ipsField_content'>
						{$this->lang->words['warnings_after']} <input name='remove' class='input_text' size='2' id='remove_input' /> <select name='remove_unit' id='remove_unit_select'><option value='d'>{$this->lang->words['warnings_time_d']}</option><option value='h'>{$this->lang->words['warnings_time_h']}</option></select>
						<br />
						<span class='desc'>{$this->lang->words['warnings_remove_points_desc']}</span>
					</div>
				</li>
			</ul>
		</div>
	</div>
	<fieldset class='submit'>
		<input type='submit' class='input_submit' value='{$this->lang->words['warnings_add']}' />
	</fieldset>
</form>";
return $IPBHTML;
}


function __f__12865ad5bd3532d3ef88400b31bc953f($member, $reasons, $errors, $editor, $currentPunishments)
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $reasons as $r )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
								<option value='{$r['wr_id']}'>{$r['wr_name']}</option>
							
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

function __f__5e813cfa3f05c3781dd0c1cf5cd90968($member, $reasons, $errors, $editor, $currentPunishments)
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $this->caches['group_cache'] as $id => $data )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
							" . ((!$data['g_access_cp'] && !$data['g_is_supmod'] && ($id != $this->settings['guest_group'])) ? ("
								<option value=\"{$id}\">{$data['g_title']}</option>
							") : ("")) . "
						
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

/* -- customField__gender --*/
function customField__gender($f) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_profile', $this->_funcHooks['customField__gender'] ) )
{
$count_2900cf6310d34b7cdc879f68aa2994f5 = is_array($this->functionData['customField__gender']) ? count($this->functionData['customField__gender']) : 0;
$this->functionData['customField__gender'][$count_2900cf6310d34b7cdc879f68aa2994f5]['f'] = $f;
}
$IPBHTML .= "<dt>{$f->raw_data['pf_title']}:</dt>
<dd>
" . (($f->value) ? ("" . (($f->value == 'm') ? ("
		<img src='{$this->settings['img_url']}/profile/male.png' alt='{$this->lang->words['js_gender_male']}' /> {$this->lang->words['js_gender_male']}
	") : ("")) . "
	
	" . (($f->value == 'f') ? ("
		<img src='{$this->settings['img_url']}/profile/female.png' alt='{$this->lang->words['js_gender_female']}' /> {$this->lang->words['js_gender_female']}
	") : ("")) . "
	
	" . (($f->value =='u') ? ("
		<img src='{$this->settings['img_url']}/profile/mystery.png' alt='{$this->lang->words['js_gender_mystery']}' /> {$this->lang->words['js_gender_mystery']}
	") : ("")) . "") : ("
	{$this->lang->words['m_no_gender']}
")) . "
</dd>";
return $IPBHTML;
}

/* -- customField__generic --*/
function customField__generic($f) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_profile', $this->_funcHooks['customField__generic'] ) )
{
$count_410e69a1a803cfbd4bce36dca60464c2 = is_array($this->functionData['customField__generic']) ? count($this->functionData['customField__generic']) : 0;
$this->functionData['customField__generic'][$count_410e69a1a803cfbd4bce36dca60464c2]['f'] = $f;
}
$IPBHTML .= "" . (($f->parsed != '') ? ("<dt>{$f->raw_data['pf_title']}:</dt>
	<dd>
		" . ((is_array($f->parsed)) ? ("
			" . implode( '<br />', $f->parsed ) . "
		") : ("
			{$f->parsed}
		")) . "
	</dd>") : ("")) . "";
return $IPBHTML;
}

/* -- customFieldGroup__contact --*/
function customFieldGroup__contact($f) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_profile', $this->_funcHooks['customFieldGroup__contact'] ) )
{
$count_cfd2e8bd5ab6b7d7fdb860e89c156347 = is_array($this->functionData['customFieldGroup__contact']) ? count($this->functionData['customFieldGroup__contact']) : 0;
$this->functionData['customFieldGroup__contact'][$count_cfd2e8bd5ab6b7d7fdb860e89c156347]['f'] = $f;
}
$IPBHTML .= "" . (($f->parsed) ? ("<dt>{$f->raw_data['pf_title']}:</dt>
<dd>
	" . (($f->raw_data['pf_icon']) ? ("<img src='{$this->settings['public_dir']}{$f->raw_data['pf_icon']}' alt='{$f->raw_data['pf_title']}' />&nbsp;") : ("")) . "
	" . ((is_array( $f->parsed )) ? ("
		".$this->__f__e6ea98035f064ff41b9fff8a850a1c52($f)."	") : ("" . (($f->raw_data['pf_key'] == 'aim') ? ("
			<a class='url' href='aim:goim?screenname={$f->parsed}'>{$f->parsed}</a>
		") : ("" . (($f->raw_data['pf_key'] == 'msn') ? ("
				<a class='url' href='msnim:chat?contact={$f->parsed}'>{$f->parsed}</a>
			") : ("" . (($f->raw_data['pf_key'] == 'yahoo') ? ("
					<a class='url' href='ymsgr:sendIM?{$f->parsed}'>{$f->parsed}</a>
				") : ("" . (($f->raw_data['pf_key'] == 'icq') ? ("
						<a class='url' type=\"application/x-icq\" href='http://www.icq.com/{$f->parsed}'>{$f->parsed}</a>
					") : ("" . (($f->raw_data['pf_key'] == 'website') ? ("
							<a class='url uid' rel=\"me\" href='{$f->parsed}'>{$f->parsed}</a>
						") : ("" . (($f->raw_data['pf_key'] == 'jabber') ? ("
								<a class='url' href='xmpp:{$f->parsed}'>{$f->parsed}</a>
							") : ("" . (($f->raw_data['pf_key'] == 'skype') ? ("
									<a class='url' href='skype:{$f->parsed}?call'>{$f->parsed}</a>
								") : ("
									{$f->parsed}
								")) . "")) . "")) . "")) . "")) . "")) . "")) . "")) . "
</dd>") : ("")) . "";
return $IPBHTML;
}


function __f__e6ea98035f064ff41b9fff8a850a1c52($f)
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $f->parsed as $value )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
			{$value}
		
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

/* -- customizeProfile --*/
function customizeProfile($member) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_profile', $this->_funcHooks['customizeProfile'] ) )
{
$count_d68dd41c221a2040288eb69c6e215db6 = is_array($this->functionData['customizeProfile']) ? count($this->functionData['customizeProfile']) : 0;
$this->functionData['customizeProfile'][$count_d68dd41c221a2040288eb69c6e215db6]['member'] = $member;
}
$IPBHTML .= "<style type=\"text/css\">
/* Overwrite some of the standard IPB rules */
/* Content, is the main page under the header */
#content {
	max-width:87%;
	min-width: 980px;
	margin-left: auto;
	margin-right: auto;
	background: transparent url(\"{style_images_url}/opacity70.png\");
	background: rgba(255,255,255,0.3);
}
#profile_background {
	background: transparent url(\"{style_images_url}/opacity70.png\");
	background: rgba(255,255,255,0.3);
}
.topic_buttons li.non_button a, #footer_utilities {
	background: #fff !important;
}
" . (($member['customization']['bg_color'] OR $member['customization']['_bgUrl']) ? ("body {
	" . (($member['customization']['bg_color']) ? ("
		background-color: #{$member['customization']['bg_color']};
	") : ("")) . "
	" . (($member['customization']['_bgUrl']) ? ("background-image: url(\"{$member['customization']['_bgUrl']}\");
		" . ((! $member['customization']['bg_tile']) ? ("
			background-position: 0px 0px;
			background-attachment: fixed;
			background-repeat: no-repeat;
		") : ("
			background-position: 0px 0px;
			background-attachment: fixed;
			background-repeat: repeat;
		")) . "") : ("")) . "
}") : ("")) . "
</style>
<script type=\"text/javascript\">
	ipb.profile.customization = 1;
</script>";
return $IPBHTML;
}

/* -- dnameWrapper --*/
function dnameWrapper($member_name="",$records=array()) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_profile', $this->_funcHooks['dnameWrapper'] ) )
{
$count_543056affcfbba6bb29db3dafdccbccd = is_array($this->functionData['dnameWrapper']) ? count($this->functionData['dnameWrapper']) : 0;
$this->functionData['dnameWrapper'][$count_543056affcfbba6bb29db3dafdccbccd]['member_name'] = $member_name;
$this->functionData['dnameWrapper'][$count_543056affcfbba6bb29db3dafdccbccd]['records'] = $records;
}

if ( ! isset( $this->registry->templateStriping['dname'] ) ) {
$this->registry->templateStriping['dname'] = array( FALSE, "row1","row2");
}
$IPBHTML .= "" . (($this->request['module']=='ajax') ? ("
	<h3>{$this->lang->words['dname_window_title']} {$member_name}</h3>
") : ("
	<h3 class='maintitle'>{$this->lang->words['dname_window_title']} {$member_name}</h3>
")) . "
<table class='ipb_table'>
	<tr class='header'>
		<th scope='col' style='width: 33%'>{$this->lang->words['dname_name_from']}</th>
		<th scope='col' style='width: 33%'>{$this->lang->words['dname_name_to']}</th>
		<th scope='col' style='width: 33%'>{$this->lang->words['dname_date']}</th>
	</tr>
	" . ((is_array($records) AND count($records)) ? ("
		    	".$this->__f__9f752997bc2a0016cee2c547f8013678($member_name,$records)."	") : ("
		<tr>
			<td colspan='3' class='no_messages'>{$this->lang->words['dname_no_history']}</td>
		</tr>
    ")) . "
</table>";
return $IPBHTML;
}


function __f__9f752997bc2a0016cee2c547f8013678($member_name="",$records=array())
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $records as $row )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
		<tr class='" .  IPSLib::next( $this->registry->templateStriping["dname"] ) . "'>
		 	<td>{$row['dname_previous']}</td>
		 	<td><strong>{$row['dname_current']}</strong></td>
		 	<td class='altrow'>" . IPSText::htmlspecialchars($this->registry->getClass('class_localization')->getDate($row['dname_date'],"short", 0)) . "</td>
		</tr>
		
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

/* -- explainPoints --*/
function explainPoints($reasons, $actions) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_profile', $this->_funcHooks['explainPoints'] ) )
{
$count_53007e23578101a5968b13fac9d99868 = is_array($this->functionData['explainPoints']) ? count($this->functionData['explainPoints']) : 0;
$this->functionData['explainPoints'][$count_53007e23578101a5968b13fac9d99868]['reasons'] = $reasons;
$this->functionData['explainPoints'][$count_53007e23578101a5968b13fac9d99868]['actions'] = $actions;
}
$IPBHTML .= "<h3>{$this->lang->words['warnings_points']}</h3>
<div class='ipsPad'>
	{$this->lang->words['warnings_points_explain_1']}
</div>
<table class='ipb_table'>
	<tr class='header'>
		<th>{$this->lang->words['warnings_reason']}</th>
		<th>{$this->lang->words['warnings_points']}</th>
	</tr>
	".$this->__f__fd1b61df0c5619809033cce6eaeb15ab($reasons,$actions)."</table>
" . ((!empty( $actions )) ? ("
	<div class='ipsPad'>
		{$this->lang->words['warnings_points_explain_2']}
	</div>
	<table class='ipb_table'>
		<tr class='header'>
			<th>{$this->lang->words['warnings_points']}</th>
			<th>{$this->lang->words['warnings_punishment']}</th>
		</tr>
		".$this->__f__39f211db7fbd0c6502b4e45305ce686c($reasons,$actions)."	</table>
") : ("")) . "";
return $IPBHTML;
}


function __f__fd1b61df0c5619809033cce6eaeb15ab($reasons, $actions)
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $reasons as $r )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
		<tr>
			<td>{$r['wr_name']}</td>
			<td>{$r['wr_points']}</td>
		</tr>
	
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

function __f__b417e010159e46e090d00b2e2bc1557e($reasons, $actions,$a='')
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( array( 'mq', 'rpa', 'suspend' ) as $k )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
						" . (($a[ 'wa_' . $k ]) ? ("" . (($a[ 'wa_' . $k ] == -1) ? ("
								" . sprintf( $this->lang->words[ 'warnings_' . $k ], $this->lang->words['warnings_permanently'] ) . "<br />
							") : ("
								" . sprintf( $this->lang->words[ 'warnings_' . $k ], sprintf( $this->lang->words['warnings_for'], $a['wa_' . $k ], $this->lang->words[ 'warnings_time_' . $a[ 'wa_' . $k . '_unit' ] ] ) ) . "<br />
							")) . "") : ("")) . "
					
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

function __f__39f211db7fbd0c6502b4e45305ce686c($reasons, $actions)
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $actions as $a )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
			<tr>
				<td>{$a['wa_points']}</td>
				<td>
					".$this->__f__b417e010159e46e090d00b2e2bc1557e($reasons,$actions,$a)."				</td>
			</tr>
		
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

/* -- friendsList --*/
function friendsList($friends, $pages) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_profile', $this->_funcHooks['friendsList'] ) )
{
$count_9b3c753c183344a9ceb58b77c34a3be6 = is_array($this->functionData['friendsList']) ? count($this->functionData['friendsList']) : 0;
$this->functionData['friendsList'][$count_9b3c753c183344a9ceb58b77c34a3be6]['friends'] = $friends;
$this->functionData['friendsList'][$count_9b3c753c183344a9ceb58b77c34a3be6]['pages'] = $pages;
}

if ( ! isset( $this->registry->templateStriping['memberStripe'] ) ) {
$this->registry->templateStriping['memberStripe'] = array( FALSE, "row1","row2");
}
$IPBHTML .= "" . $this->registry->getClass('output')->addJSModule("friends", "0" ) . "
<h2>{$this->lang->words['m_friends_list']}</h2>
" . (($pages) ? ("
	<div class='topic_controls'>
		$pages
	</div>
") : ("")) . "
<ul class='tab_bar no_title'>
	" . (($this->request['tab'] == 'list' || !$this->request['tab']) ? ("
		<li class='active'><strong>{$this->lang->words['m_friends_list']}</strong></li>
		<li><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=members&amp;section=friends&amp;module=profile&amp;do=list&amp;tab=pending", "public",'' ), "", "" ) . "' title='{$this->lang->words['m_friends_pending']}'>{$this->lang->words['m_friends_pending']}</a></li>
	") : ("")) . "
	" . (($this->request['tab'] == 'pending') ? ("
		<li><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=members&amp;section=friends&amp;module=profile&amp;do=list&amp;tab=list", "public",'' ), "", "" ) . "' title='{$this->lang->words['m_friends_list']}'>{$this->lang->words['m_friends_list']}</a></li>
		<li class='active'><strong>{$this->lang->words['m_friends_pending']}</strong></li>
	") : ("")) . "
</ul>
" . ((is_array($friends) and count($friends) && $this->settings['friends_enabled']) ? ("
		<ul class='members'>
	".$this->__f__1197ca7b5b4bf8e48d52678872d8c754($friends,$pages)."	</ul>
") : ("<p class='no_messages'>
		" . (($this->request['tab'] == 'pending') ? ("
			{$this->lang->words['no_friends_awaiting_approval']}
		") : ("
			{$this->lang->words['no_friends_to_display']}
		")) . "
	</p>")) . "
" . (($pages) ? ("
	<div class='topic_controls'>
		{$pages}
	</div>
") : ("")) . "";
return $IPBHTML;
}


function __f__1197ca7b5b4bf8e48d52678872d8c754($friends, $pages)
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $friends as $friend )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
		" . (($this->request['tab'] == 'pending') ? ("<li id='member_id_{$friend['member_id']}' class='general_box clear member_entry " .  IPSLib::next( $this->registry->templateStriping["memberStripe"] ) . "'>
				<h3 class='bar'>" . ( method_exists( $this->registry->getClass('output')->getTemplate('global'), 'userHoverCard' ) ? $this->registry->getClass('output')->getTemplate('global')->userHoverCard($friend) : '' ) . "</h3>
				<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showuser={$friend['member_id']}", "public",'' ), "{$friend['members_seo_name']}", "showuser" ) . "' title='{$this->lang->words['view_profile']}'><img src='{$friend['pp_thumb_photo']}' width='{$friend['pp_thumb_width']}' height='{$friend['pp_thumb_height']}' alt=\"" . sprintf($this->lang->words['users_photo'],$friend['members_display_name']) . "\" class='photo' /></a>	
			
				<dl class='info'>
					<dt class='clear'>{$this->lang->words['m_member_since']}</dt>
					<dd>" . IPSText::htmlspecialchars($this->registry->getClass('class_localization')->getDate($friend['joined'],"short", 0)) . "</dd>
					<dt class='clear'>{$this->lang->words['m_group']}</dt>
					<dd>{$friend['_group_formatted']}</dd>
					<dt class='clear'>{$this->lang->words['m_posts']}</dt>
					<dd>" . $this->registry->getClass('class_localization')->formatNumber( $friend['posts'] ) . "</dd>
					<dt class='clear'>{$this->lang->words['m_last_active']}</dt>
					<dd>" . IPSText::htmlspecialchars($this->registry->getClass('class_localization')->getDate($friend['last_activity'],"short", 0)) . "</dd>
				</dl>
				
				<ul class='user_controls clear'>
					<li class='positive'><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=members&amp;module=profile&amp;section=friends&amp;do=moderate&amp;pp_option=approve&amp;pp_friend_id[{$friend['member_id']}]=1&amp;md5check={$this->member->form_hash}", "public",'' ), "", "" ) . "' title='Approve'>" . $this->registry->getClass('output')->getReplacement("approve") . " {$this->lang->words['approve_request']}</a></li>
					<li class='negative'><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=members&amp;module=profile&amp;section=friends&amp;do=moderate&amp;pp_option=delete&amp;pp_friend_id[{$friend['member_id']}]=1&amp;md5check={$this->member->form_hash}", "public",'' ), "", "" ) . "' title='Deny'>" . $this->registry->getClass('output')->getReplacement("deny") . " {$this->lang->words['deny_request']}</a></li>
				</ul>
				" . (($this->settings['pp_allow_member_rate']) ? ("<p class='rating'> 
						" . (($friend['pp_rating_real'] >= 1) ? ("" . $this->registry->getClass('output')->getReplacement("rate_on") . "") : ("" . $this->registry->getClass('output')->getReplacement("rate_off") . "")) . "" . (($friend['pp_rating_real'] >= 2) ? ("" . $this->registry->getClass('output')->getReplacement("rate_on") . "") : ("" . $this->registry->getClass('output')->getReplacement("rate_off") . "")) . "" . (($friend['pp_rating_real'] >= 3) ? ("" . $this->registry->getClass('output')->getReplacement("rate_on") . "") : ("" . $this->registry->getClass('output')->getReplacement("rate_off") . "")) . "" . (($friend['pp_rating_real'] >= 4) ? ("" . $this->registry->getClass('output')->getReplacement("rate_on") . "") : ("" . $this->registry->getClass('output')->getReplacement("rate_off") . "")) . "" . (($friend['pp_rating_real'] >= 5) ? ("" . $this->registry->getClass('output')->getReplacement("rate_on") . "") : ("" . $this->registry->getClass('output')->getReplacement("rate_off") . "")) . "
					</p>") : ("")) . "
				
				" . (($this->settings['reputation_enabled'] && $this->settings['reputation_show_profile']) ? ("" . (($friend['pp_reputation_points'] > 0) ? ("
						<p class='reputation positive'>
					") : ("")) . "
					" . (($friend['pp_reputation_points'] < 0) ? ("
						<p class='reputation negative'>
					") : ("")) . "
					" . (($friend['pp_reputation_points'] == 0) ? ("
						<p class='reputation zero'>
					") : ("")) . "
							<span class='number'>{$this->lang->words['m_reputation']} {$friend['pp_reputation_points']}</span>
						</p>") : ("")) . "						
			</li>") : ("<li id='member_id_{$friend['friends_friend_id']}' class='general_box clear member_entry " .  IPSLib::next( $this->registry->templateStriping["memberStripe"] ) . "'>
				<h3 class='bar'>" . ( method_exists( $this->registry->getClass('output')->getTemplate('global'), 'userHoverCard' ) ? $this->registry->getClass('output')->getTemplate('global')->userHoverCard($friend) : '' ) . "</h3>
				<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showuser={$friend['member_id']}", "public",'' ), "{$friend['members_seo_name']}", "showuser" ) . "' title='{$this->lang->words['view_profile']}'><img src='{$friend['pp_thumb_photo']}' width='{$friend['pp_thumb_width']}' height='{$friend['pp_thumb_height']}' alt=\"" . sprintf($this->lang->words['users_photo'],$friend['members_display_name']) . "\" class='photo' /></a>	
			
				<dl class='info'>
					<dt class='clear'>{$this->lang->words['m_member_since']}</dt>
					<dd>" . IPSText::htmlspecialchars($this->registry->getClass('class_localization')->getDate($friend['joined'],"short", 0)) . "</dd>
					<dt class='clear'>{$this->lang->words['m_group']}</dt>
					<dd>{$friend['_group_formatted']}</dd>
					<dt class='clear'>{$this->lang->words['m_posts']}</dt>
					<dd>" . $this->registry->getClass('class_localization')->formatNumber( $friend['posts'] ) . "</dd>
					<dt class='clear'>{$this->lang->words['m_last_active']}</dt>
					<dd>" . IPSText::htmlspecialchars($this->registry->getClass('class_localization')->getDate($friend['last_activity'],"short", 0)) . "</dd>
				</dl>
				
				<ul class='user_controls clear'>
					" . (($this->memberData['member_id'] AND $this->memberData['member_id'] != $friend['friends_friend_id'] && $this->settings['friends_enabled'] AND $this->memberData['g_can_add_friends']) ? ("" . ((IPSMember::checkFriendStatus( $friend['friends_friend_id'] )) ? ("
							<li class='mini_friend_toggle is_friend' id='friend_profile_{$friend['friends_friend_id']}'><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=members&amp;module=profile&amp;section=friends&amp;do=remove&amp;member_id={$friend['friends_friend_id']}&amp;secure_key={$this->member->form_hash}", "public",'' ), "", "" ) . "' title='{$this->lang->words['remove_as_friend']}'>" . $this->registry->getClass('output')->getReplacement("remove_friend") . "</a></li>
						") : ("
							<li class='mini_friend_toggle is_not_friend' id='friend_profile_{$friend['friends_friend_id']}'><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=members&amp;module=profile&amp;section=friends&amp;do=add&amp;member_id={$friend['friends_friend_id']}&amp;secure_key={$this->member->form_hash}", "public",'' ), "", "" ) . "' title='{$this->lang->words['add_me_friend']}'>" . $this->registry->getClass('output')->getReplacement("add_friend") . "</a></li>								
						")) . "") : ("")) . "
					" . (($this->memberData['g_use_pm'] AND $this->memberData['members_disable_pm'] == 0 AND IPSLib::moduleIsEnabled( 'messaging', 'members' )) ? ("
						<li class='pm_button' id='pm_xxx_{$friend['friends_friend_id']}'><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=members&amp;module=messaging&amp;section=send&amp;do=form&amp;fromMemberID={$friend['friends_member_id']}", "public",'' ), "", "" ) . "' title='{$this->lang->words['pm_this_member']}'>" . $this->registry->getClass('output')->getReplacement("send_msg") . "</a></li>
					") : ("")) . "
					<li><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=core&amp;module=search&amp;do=user_posts&amp;mid={$friend['friends_friend_id']}&amp;view_by_title=1&amp;search_filter_app[forums]=1", "public",'' ), "", "" ) . "'>{$this->lang->words['find_topics']}</a></li>
					<li><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=core&amp;module=search&amp;do=user_posts&amp;mid={$friend['friends_friend_id']}" . ((! in_array( $this->settings['search_method'], array( 'traditional', 'sphinx' ) )) ? ("&amp;search_filter_app[forums]=1") : ("")) . "", "public",'' ), "", "" ) . "'>{$this->lang->words['find_posts']}</a></li>
					" . (($friend['has_blog'] AND IPSLib::appIsInstalled( 'blog' )) ? ("
						<li><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=blog&amp;module=display&amp;section=blog&amp;show_members_blogs={$friend['friends_friend_id']}", "public",'' ), "", "" ) . "' title='{$this->lang->words['view_blog']}'>" . $this->registry->getClass('output')->getReplacement("blog_link") . "</a></li>
					") : ("")) . "
					" . (($friend['has_gallery'] AND IPSLib::appIsInstalled( 'gallery' )) ? ("
						<li><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=gallery&amp;module=user&amp;section=user&amp;user={$friend['friends_friend_id']}", "public",'' ), "", "" ) . "' title='{$this->lang->words['view_gallery']}'>" . $this->registry->getClass('output')->getReplacement("gallery_link") . "</a></li>
					") : ("")) . "
				</ul>
				" . (($this->settings['pp_allow_member_rate']) ? ("<p class='rating'> 
						" . (($friend['pp_rating_real'] >= 1) ? ("" . $this->registry->getClass('output')->getReplacement("rate_on") . "") : ("" . $this->registry->getClass('output')->getReplacement("rate_off") . "")) . "" . (($friend['pp_rating_real'] >= 2) ? ("" . $this->registry->getClass('output')->getReplacement("rate_on") . "") : ("" . $this->registry->getClass('output')->getReplacement("rate_off") . "")) . "" . (($friend['pp_rating_real'] >= 3) ? ("" . $this->registry->getClass('output')->getReplacement("rate_on") . "") : ("" . $this->registry->getClass('output')->getReplacement("rate_off") . "")) . "" . (($friend['pp_rating_real'] >= 4) ? ("" . $this->registry->getClass('output')->getReplacement("rate_on") . "") : ("" . $this->registry->getClass('output')->getReplacement("rate_off") . "")) . "" . (($friend['pp_rating_real'] >= 5) ? ("" . $this->registry->getClass('output')->getReplacement("rate_on") . "") : ("" . $this->registry->getClass('output')->getReplacement("rate_off") . "")) . "
					</p>") : ("")) . "
				
				" . (($this->settings['reputation_enabled'] && $this->settings['reputation_show_profile']) ? ("" . (($friend['pp_reputation_points'] > 0) ? ("
						<p class='reputation positive'>
					") : ("")) . "
					" . (($friend['pp_reputation_points'] < 0) ? ("
						<p class='reputation negative'>
					") : ("")) . "
					" . (($friend['pp_reputation_points'] == 0) ? ("
						<p class='reputation zero'>
					") : ("")) . "
							<span class='number'>{$this->lang->words['m_reputation']} {$friend['pp_reputation_points']}</span>
						</p>") : ("")) . "
			</li>")) . "
	
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

/* -- listWarnings --*/
function listWarnings($member, $warnings, $pagination, $reasons, $canWarn) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_profile', $this->_funcHooks['listWarnings'] ) )
{
$count_c4aeb4c64d96a3c7c0fab6151d908e86 = is_array($this->functionData['listWarnings']) ? count($this->functionData['listWarnings']) : 0;
$this->functionData['listWarnings'][$count_c4aeb4c64d96a3c7c0fab6151d908e86]['member'] = $member;
$this->functionData['listWarnings'][$count_c4aeb4c64d96a3c7c0fab6151d908e86]['warnings'] = $warnings;
$this->functionData['listWarnings'][$count_c4aeb4c64d96a3c7c0fab6151d908e86]['pagination'] = $pagination;
$this->functionData['listWarnings'][$count_c4aeb4c64d96a3c7c0fab6151d908e86]['reasons'] = $reasons;
$this->functionData['listWarnings'][$count_c4aeb4c64d96a3c7c0fab6151d908e86]['canWarn'] = $canWarn;
}
$IPBHTML .= "<div class='master_list'>
<h2>" . sprintf( $this->lang->words['warnings_member'], $member['members_display_name'] ) . " - " . sprintf( $this->lang->words['warn_status'], $member['warn_level'] ) . "</h2>
" . (($pagination || $canWarn) ? ("<div class='topic_controls clearfix'>
		" . (($pagination) ? ("{$pagination}") : ("")) . "
		" . (($canWarn) ? ("
			<ul class='topic_buttons'>
				<li><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=members&module=profile&section=warnings&do=add&member={$member['member_id']}&from_app={$this->request['from_app']}&from_id1={$this->request['from_id1']}&from_id2={$this->request['from_id2']}", "public",'' ), "", "" ) . "'>{$this->lang->words['warnings_add']}</a></li>
			</ul>
		") : ("")) . "
	</div>") : ("")) . "
" . ((empty( $warnings )) ? ("
	<div class='no_messages'>
		{$this->lang->words['warnings_empty']}
	</div>
") : ("
	<div class='ipsBox'>
		<div class='ipsBox_container'>
			<table class='ipb_table'>
				<tbody>
					".$this->__f__cde92a2e181c11f1fcd1b091d6a60aa5($member,$warnings,$pagination,$reasons,$canWarn)."				</tbody>
			</table>
		</div>
	</div>
")) . "
<br />
" . (($pagination) ? ("{$pagination}") : ("")) . "
</div>";
return $IPBHTML;
}


function __f__cde92a2e181c11f1fcd1b091d6a60aa5($member, $warnings, $pagination, $reasons, $canWarn)
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $warnings as $warning )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
						<tr class='row'>
							<td>" . IPSText::htmlspecialchars($this->registry->getClass('class_localization')->getDate($warning['wl_date'],"JOINED", 0)) . "</td>
							<td>{$this->lang->words['warnings_reason']}: 
								" . ((isset( $reasons[ $warning['wl_reason'] ] )) ? ("
									{$reasons[ $warning['wl_reason'] ]['wr_name']}
								") : ("
									{$this->lang->words['warnings_reasons_other']}
								")) . "
							</td>
							<td>{$this->lang->words['warnings_points']}: {$warning['wl_points']}</td>
							<td>" . ( method_exists( $this->registry->getClass('output')->getTemplate('global'), 'userHoverCard' ) ? $this->registry->getClass('output')->getTemplate('global')->userHoverCard($warning['wl_moderator']) : '' ) . "</td>
						</tr>
					
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

/* -- photoEditor --*/
function photoEditor($data, $member) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_profile', $this->_funcHooks['photoEditor'] ) )
{
$count_899909d5267b148ebada37e8ab0d5d8c = is_array($this->functionData['photoEditor']) ? count($this->functionData['photoEditor']) : 0;
$this->functionData['photoEditor'][$count_899909d5267b148ebada37e8ab0d5d8c]['data'] = $data;
$this->functionData['photoEditor'][$count_899909d5267b148ebada37e8ab0d5d8c]['member'] = $member;
}
$IPBHTML .= "<!--no data in this master skin-->";
return $IPBHTML;
}

/* -- profileModern --*/
function profileModern($tabs=array(), $member=array(), $visitors=array(), $default_tab='status', $default_tab_content='', $friends=array(), $status=array(), $warns=array()) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_profile', $this->_funcHooks['profileModern'] ) )
{
$count_50785fd257b92fa01d03b96dc85be474 = is_array($this->functionData['profileModern']) ? count($this->functionData['profileModern']) : 0;
$this->functionData['profileModern'][$count_50785fd257b92fa01d03b96dc85be474]['tabs'] = $tabs;
$this->functionData['profileModern'][$count_50785fd257b92fa01d03b96dc85be474]['member'] = $member;
$this->functionData['profileModern'][$count_50785fd257b92fa01d03b96dc85be474]['visitors'] = $visitors;
$this->functionData['profileModern'][$count_50785fd257b92fa01d03b96dc85be474]['default_tab'] = $default_tab;
$this->functionData['profileModern'][$count_50785fd257b92fa01d03b96dc85be474]['default_tab_content'] = $default_tab_content;
$this->functionData['profileModern'][$count_50785fd257b92fa01d03b96dc85be474]['friends'] = $friends;
$this->functionData['profileModern'][$count_50785fd257b92fa01d03b96dc85be474]['status'] = $status;
$this->functionData['profileModern'][$count_50785fd257b92fa01d03b96dc85be474]['warns'] = $warns;
}
$IPBHTML .= "<div class='master_list'>
	<h2>" . sprintf( $this->lang->words['their_profile'], $member['members_display_name'] ) . "</h2>	
	<div class='row'>
		<img class=\"photo\" src='{$member['pp_main_photo']}' alt=\"" . sprintf($this->lang->words['users_photo'],$member['members_display_name']) . "\"  />
		" . (($member['spamStatus'] !== NULL && $member['member_id'] != $this->memberData['member_id']) ? ("<div style='clear:both'>
			<br />
			" . (($member['spamStatus'] === TRUE) ? ("
				<span class='button secondary'><strong>{$this->lang->words['spm_on']}</strong></span>
			") : ("
				<a class='button' title='{$this->lang->words['spm_off']}' href='{$this->settings['base_url']}app=core&amp;module=modcp&amp;do=setAsSpammer&amp;member_id={$member['member_id']}&amp;auth_key={$this->member->form_hash}' onclick=\"return ipb.global.toggleFlagSpammer({$member['member_id']}, true)\">{$this->lang->words['spm_off']}</a>
			")) . "
			</div>") : ("")) . "
	</div>
	
	<h3>{$this->lang->words['my_info']}</h3>
	<div class='row line_spacing'>
		<strong>{$this->lang->words['m_group']}</strong> {$member['g_title']}<br />
		<strong>{$this->lang->words['m_posts']}</strong> " . $this->registry->getClass('class_localization')->formatNumber( $member['posts'] ) . "<br />
		<strong>{$this->lang->words['m_member_since']}</strong> " . IPSText::htmlspecialchars($this->registry->getClass('class_localization')->getDate($member['joined'],"joined", 0)) . "<br />
		<strong>{$this->lang->words['m_last_active']}</strong> {$member['_last_active']}
	</div>
	
	<h3>{$this->lang->words['my_info']}</h3>
	<div class='row line_spacing'>
		" . (($member['title'] != '') ? ("
			<strong>{$this->lang->words['m_member_title']}</strong> {$member['title']}<br />
		") : ("")) . "
		<strong>{$this->lang->words['m_age_prefix']}</strong> 
		" . (($member['_age'] > 0) ? ("
			{$member['_age']} {$this->lang->words['m_years_old']}
		") : ("
			{$this->lang->words['m_age_unknown']}
		")) . "
		<br />
		<strong>{$this->lang->words['m_birthday_prefix']}</strong> 
		" . (($member['bday_day']) ? ("<!-- SKINNOTE: We should use the localized date formatting for this -->
			{$member['_bday_month']} {$member['bday_day']}" . (($member['bday_year']) ? (", {$member['bday_year']}") : ("")) . "") : ("
			{$this->lang->words['m_bday_unknown']}
		")) . "
	</div>
	
	<h3>{$this->lang->words['user_controls']}</h3>
	<div class='row line_spacing'>
		" . (($this->memberData['member_id'] AND $this->memberData['member_id'] != $member['member_id'] && $this->settings['friends_enabled'] AND $this->memberData['g_can_add_friends']) ? ("" . ((IPSMember::checkFriendStatus( $member['member_id'] )) ? ("
				<a class='button secondary' href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=members&amp;section=friends&amp;module=profile&amp;do=remove&amp;member_id={$member['member_id']}&amp;secure_key={$this->member->form_hash}", "public",'' ), "", "" ) . "' title='{$this->lang->words['remove_friend']}'>{$this->lang->words['remove_as_friend']}</a>
			") : ("
				<a class='button secondary' href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=members&amp;section=friends&amp;module=profile&amp;do=add&amp;member_id={$member['member_id']}&amp;secure_key={$this->member->form_hash}", "public",'' ), "", "" ) . "' title='{$this->lang->words['add_friend']}'>{$this->lang->words['add_me_friend']}</a>
			")) . "
			<br /><br />") : ("")) . "
		" . ((($member['member_id'] != $this->memberData['member_id']) AND $this->memberData['g_use_pm'] AND $this->memberData['members_disable_pm'] == 0 AND IPSLib::moduleIsEnabled( 'messaging', 'members' )) ? ("
			<a class='button secondary' href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=members&amp;module=messaging&amp;section=send&amp;do=form&amp;fromMemberID={$member['member_id']}", "public",'' ), "", "" ) . "' title='{$this->lang->words['pm_this_member']}'>{$this->lang->words['send_message']}</a>
			<br /><br />
		") : ("")) . "
		<a class='button secondary' href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=core&amp;module=search&amp;do=user_activity&amp;mid={$member['member_id']}", "public",'' ), "", "" ) . "'>" . $this->registry->getClass('output')->getReplacement("find_topics_link") . " {$this->lang->words['gbl_find_my_content']}</a>
	</div>
</div>";
return $IPBHTML;
}

/* -- reputationPage --*/
function reputationPage($langBit, $currentApp='', $supportedApps=array(), $processedResults='') {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_profile', $this->_funcHooks['reputationPage'] ) )
{
$count_eeed1c3581f4f0f966b7fa939b1f80d0 = is_array($this->functionData['reputationPage']) ? count($this->functionData['reputationPage']) : 0;
$this->functionData['reputationPage'][$count_eeed1c3581f4f0f966b7fa939b1f80d0]['langBit'] = $langBit;
$this->functionData['reputationPage'][$count_eeed1c3581f4f0f966b7fa939b1f80d0]['currentApp'] = $currentApp;
$this->functionData['reputationPage'][$count_eeed1c3581f4f0f966b7fa939b1f80d0]['supportedApps'] = $supportedApps;
$this->functionData['reputationPage'][$count_eeed1c3581f4f0f966b7fa939b1f80d0]['processedResults'] = $processedResults;
}
$IPBHTML .= "" . $this->registry->getClass('output')->addJSModule("like", "0" ) . "
<h1 class='ipsType_pagetitle'>{$this->lang->words[ $langBit ]}</h1>
<br />
<div class='general_box'>
	" . ((count( $supportedApps ) > 1) ? ("
		<div class='maintitle ipsFilterbar clearfix'>
			<ul class='ipsList_inline ipsType_smaller left'>
				".$this->__f__bfc11a982e1e3a301ae1ae97d08f5e71($langBit,$currentApp,$supportedApps,$processedResults)."			</ul>
		</div>
	") : ("")) . "
	" . (($processedResults) ? ("
		{$processedResults}
	") : ("
		<div class='no_messages'>{$this->lang->words['reputation_empty']}</div>
	")) . "
</div>";
return $IPBHTML;
}


function __f__bfc11a982e1e3a301ae1ae97d08f5e71($langBit, $currentApp='', $supportedApps=array(), $processedResults='')
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $supportedApps as $_app )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
					<li " . (($_app['app_directory'] == $currentApp) ? ("class='active'") : ("")) . ">
						<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=members&amp;module=reputation&amp;section=most&amp;app_tab={$_app['app_directory']}", "public",'' ), "most_liked", "most_liked" ) . "'>
							" . IPSLib::getAppTitle($_app['app_directory']) . "
						</a>
					</li>
				
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

/* -- showCard --*/
function showCard($member, $download=0) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_profile', $this->_funcHooks['showCard'] ) )
{
$count_de8bd4d8b144be2788b363257e5a28a5 = is_array($this->functionData['showCard']) ? count($this->functionData['showCard']) : 0;
$this->functionData['showCard'][$count_de8bd4d8b144be2788b363257e5a28a5]['member'] = $member;
$this->functionData['showCard'][$count_de8bd4d8b144be2788b363257e5a28a5]['download'] = $download;
}
$IPBHTML .= "<div class='vcard userpopup'>
	<h3><a href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showuser={$member['member_id']}", "public",'' ), "{$member['members_seo_name']}", "showuser" ) . "\" class=\"fn nickname url\">{$member['members_display_name']}</a></h3>
	<div>
		" . (($member['pp_status']) ? ("
			<p class='message user_status'>" . $this->registry->getClass('output')->getReplacement("user_status") . "&nbsp; <strong>{$member['members_display_name']}</strong> {$member['pp_status']}</p>
		") : ("")) . "
		<div class='info'>
			<img class='photo' src=\"{$member['pp_thumb_photo']}\" alt=\"{$this->lang->words['get_photo']}\" width='{$member['pp_thumb_width']}' height='{$member['pp_thumb_height']}' alt='photo' />
			<dl>
				<dt>{$this->lang->words['m_group']}</dt>
				<dd>{$member['_group_formatted']}</dd>
				<dt>{$this->lang->words['m_posts']}</dt>
				<dd>" . $this->registry->getClass('class_localization')->formatNumber( $member['posts'] ) . "</dd>
				<dt>{$this->lang->words['m_member_since']}</dt>
				<dd>" . IPSText::htmlspecialchars($this->registry->getClass('class_localization')->getDate($member['joined'],"joined", 0)) . "</dd>
				<dt>{$this->lang->words['m_last_active']}</dt>
				<dd>" . (($member['_online']) ? ("<span class='ipsBadge ipsBadge_green'>{$this->lang->words['online_online']}</span>") : ("<span class='ipsBadge ipsBadge_grey'>{$this->lang->words['online_offline']}</span>")) . " {$member['_last_active']}</dd>
				" . (($member['_online'] && ($member['online_extra'] != $this->lang->words['not_online'])) ? ("
					<dt>{$this->lang->words['m_currently']}</dt>
					<dd>
						{$member['online_extra']}
					</dd>
				") : ("")) . "
				" . (($this->memberData['g_access_cp'] == 1) ? ("
					<dt>{$this->lang->words['m_email']}</dt>
					<dd><a href='mailto:{$member['email']}'>{$member['email']}</a></dd>
				") : ("")) . "
			</dl>
		</div>
		<ul class='user_controls clear'>
			" . (($member['spamStatus'] !== NULL && $member['member_id'] != $this->memberData['member_id']) ? ("" . (($member['spamStatus'] === TRUE) ? ("
					<li><a href='#' title='{$this->lang->words['spm_on']}' onclick=\"return ipb.global.toggleFlagSpammer({$member['member_id']}, false)\">" . $this->registry->getClass('output')->getReplacement("spammer_on") . "</a></li>
				") : ("
					<li><a title='{$this->lang->words['spm_off']}' href='{$this->settings['base_url']}app=core&amp;module=modcp&amp;do=setAsSpammer&amp;member_id={$member['member_id']}&amp;auth_key={$this->member->form_hash}' onclick=\"return ipb.global.toggleFlagSpammer({$member['member_id']}, true)\">" . $this->registry->getClass('output')->getReplacement("spammer_off") . "</a></li>
				")) . "") : ("")) . "
			" . (($this->memberData['member_id'] AND $this->memberData['member_id'] != $member['member_id'] && $this->settings['friends_enabled'] AND $this->memberData['g_can_add_friends']) ? ("" . ((IPSMember::checkFriendStatus( $member['member_id'] )) ? ("
					<li><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=members&amp;module=profile&amp;section=friends&amp;do=remove&amp;member_id={$member['member_id']}&amp;secure_key={$this->member->form_hash}", "public",'' ), "", "" ) . "' title='{$this->lang->words['remove_friend']}'>" . $this->registry->getClass('output')->getReplacement("remove_friend") . "</a></li>
				") : ("
					<li><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=members&amp;module=profile&amp;section=friends&amp;do=add&amp;member_id={$member['member_id']}&amp;secure_key={$this->member->form_hash}", "public",'' ), "", "" ) . "' title='{$this->lang->words['add_friend']}'>" . $this->registry->getClass('output')->getReplacement("add_friend") . "</a></li>								
				")) . "") : ("")) . "
			" . (($this->memberData['member_id'] AND $this->memberData['member_id'] != $member['member_id'] AND $this->memberData['g_use_pm'] AND $this->memberData['members_disable_pm'] == 0 AND IPSLib::moduleIsEnabled( 'messaging', 'members' )) ? ("
				<li class='pm_button' id='pm_xxx_{$member['member_id']}'><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=members&amp;module=messaging&amp;section=send&amp;do=form&amp;fromMemberID={$member['member_id']}", "public",'' ), "", "" ) . "' title='{$this->lang->words['pm_this_member']}'>" . $this->registry->getClass('output')->getReplacement("send_msg") . "</a></li>
			") : ("")) . "
			
			<li><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=core&amp;module=search&amp;do=user_posts&amp;mid={$member['member_id']}&amp;search_filter_app[forums]=1&amp;view_by_title=1", "public",'' ), "", "" ) . "' title='{$this->lang->words['find_topics']}'>" . $this->registry->getClass('output')->getReplacement("find_topics_link") . "</a></li>		
			<li><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=core&amp;module=search&amp;do=user_posts&amp;mid={$member['member_id']}" . ((! in_array( $this->settings['search_method'], array( 'traditional', 'sphinx' ) )) ? ("&amp;search_filter_app[forums]=1") : ("")) . "", "public",'' ), "", "" ) . "' title='{$this->lang->words['find_posts']}'>" . $this->registry->getClass('output')->getReplacement("find_posts_link") . "</a></li>
			" . (($member['has_blog'] AND IPSLib::appIsInstalled( 'blog' )) ? ("
				<li><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=blog&amp;module=display&amp;section=blog&amp;show_members_blogs={$member['member_id']}", "public",'' ), "", "" ) . "' title='{$this->lang->words['view_blog']}'>" . $this->registry->getClass('output')->getReplacement("blog_link") . "</a></li>
			") : ("")) . "
			" . (($member['has_gallery'] AND IPSLib::appIsInstalled( 'gallery' )) ? ("
				<li><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=gallery&amp;user={$member['member_id']}", "public",'' ), "{$member['members_seo_name']}", "useralbum" ) . "' title='{$this->lang->words['view_gallery']}'>" . $this->registry->getClass('output')->getReplacement("gallery_link") . "</a></li>
			") : ("")) . "
		</ul>
		
		
		" . (($this->settings['reputation_enabled'] && $this->settings['reputation_show_profile']) ? ("" . (($member['pp_reputation_points'] > 0) ? ("
				<div class='reputation positive'>
			") : ("")) . "
			" . (($member['pp_reputation_points'] < 0) ? ("
				<div class='reputation negative'>
			") : ("")) . "
			" . (($member['pp_reputation_points'] == 0) ? ("
				<div class='reputation zero'>
			") : ("")) . "
					<span class='number'>{$this->lang->words['m_reputation']} {$member['pp_reputation_points']}</span>
				</div>") : ("")) . "
	</div>
</div>";
return $IPBHTML;
}

/* -- statusReplies --*/
function statusReplies($replies=array(), $no_wrapper=false) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_profile', $this->_funcHooks['statusReplies'] ) )
{
$count_f3baf9f8d0334c31d80da47ae1b0a546 = is_array($this->functionData['statusReplies']) ? count($this->functionData['statusReplies']) : 0;
$this->functionData['statusReplies'][$count_f3baf9f8d0334c31d80da47ae1b0a546]['replies'] = $replies;
$this->functionData['statusReplies'][$count_f3baf9f8d0334c31d80da47ae1b0a546]['no_wrapper'] = $no_wrapper;
}
$IPBHTML .= "".$this->__f__ebf0cb304340e10e28d0092f4c4ded53($replies,$no_wrapper)."";
return $IPBHTML;
}


function __f__ebf0cb304340e10e28d0092f4c4ded53($replies=array(), $no_wrapper=false)
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $replies as $reply )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
	<div id='statusReply-{$reply['reply_id']}' class='status_mini_wrap row2'>
		<div class=\"status_mini_photo\">
			<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showuser={$reply['member_id']}", "public",'' ), "{$reply['members_seo_name']}", "showuser" ) . "' title='{$this->lang->words['view_profile']}'><img src='{$reply['pp_mini_photo']}' width='{$reply['pp_mini_width']}' height='{$reply['pp_mini_height']}' alt=\"" . sprintf($this->lang->words['users_photo'],$reply['members_display_name']) . "\" class='photo' /></a>	
		</div>
		<div class=\"status_mini_content\">
			<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showuser={$reply['member_id']}", "public",'' ), "{$reply['members_seo_name']}", "showuser" ) . "' title='{$this->lang->words['view_profile']}' style='font-weight:bold'>{$reply['members_display_name']}</a> &middot; <span class='desc'>{$reply['reply_date_formatted']}" . (($reply['_canDelete']) ? (" &middot; <a href=\"{$this->settings['base_url']}app=members&amp;module=profile&amp;section=status&amp;do=deleteReply&amp;status_id={$reply['reply_status_id']}&reply_id={$reply['reply_id']}&amp;k={$this->member->form_hash}\" id=\"statusReplyDelete-{$reply['reply_status_id']}-{$reply['reply_id']}\" class=\"__sDR __dr{$reply['reply_status_id']}-{$reply['reply_id']}\">{$this->lang->words['status_delete_link']}</a>") : ("")) . "</span>
			<h5>{$reply['reply_content']}</h5>
		</div>
	</div>

";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

/* -- statusUpdates --*/
function statusUpdates($updates=array(), $smallSpace=0, $latestOnly=0) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_profile', $this->_funcHooks['statusUpdates'] ) )
{
$count_fd47dd8b44483df288054148ca0d614e = is_array($this->functionData['statusUpdates']) ? count($this->functionData['statusUpdates']) : 0;
$this->functionData['statusUpdates'][$count_fd47dd8b44483df288054148ca0d614e]['updates'] = $updates;
$this->functionData['statusUpdates'][$count_fd47dd8b44483df288054148ca0d614e]['smallSpace'] = $smallSpace;
$this->functionData['statusUpdates'][$count_fd47dd8b44483df288054148ca0d614e]['latestOnly'] = $latestOnly;
}
$IPBHTML .= "".$this->__f__62667a311be254dda97bddf4cacffd77($updates,$smallSpace,$latestOnly)."";
return $IPBHTML;
}


function __f__62667a311be254dda97bddf4cacffd77($updates=array(), $smallSpace=0, $latestOnly=0)
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $updates as $id => $status )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
" . (($status['status_approved'] || $status['_canApprove']) ? ("<div class=\"row touch-row clearfix" . ((!$status['status_approved']) ? (" moderated") : ("")) . "\" id=\"update-{$id}\">
		<img src='{$status['pp_thumb_photo']}' alt=\"" . sprintf($this->lang->words['users_photo'],$status['members_display_name']) . "\" class='photo' />
		<p>
			<a class=\"title\" href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showuser={$status['member_id']}", "public",'' ), "{$status['members_seo_name']}", "showuser" ) . "' title='{$this->lang->words['view_profile']}'>{$status['members_display_name']}</a>
			" . (($status['status_member_id'] != $status['status_author_id']) ? ("
				&rarr;
				<a class=\"title\" href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showuser={$status['owner']['member_id']}", "public",'' ), "{$status['owner']['members_seo_name']}", "showuser" ) . "' title='{$this->lang->words['view_profile']}'>{$status['owner']['members_display_name']}</a>
			") : ("")) . "
			<br />
			{$status['status_content']}
		</p>
	</div>") : ("")) . "

";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

/* -- statusUpdatesPage --*/
function statusUpdatesPage($updates=array(), $pages='') {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_profile', $this->_funcHooks['statusUpdatesPage'] ) )
{
$count_cfc00ccb3d673c049cbc4be34583a96f = is_array($this->functionData['statusUpdatesPage']) ? count($this->functionData['statusUpdatesPage']) : 0;
$this->functionData['statusUpdatesPage'][$count_cfc00ccb3d673c049cbc4be34583a96f]['updates'] = $updates;
$this->functionData['statusUpdatesPage'][$count_cfc00ccb3d673c049cbc4be34583a96f]['pages'] = $pages;
}

if ( ! isset( $this->registry->templateStriping['recent_status'] ) ) {
$this->registry->templateStriping['recent_status'] = array( FALSE, "row1","row2 altrow");
}
$IPBHTML .= "" . $this->registry->getClass('output')->addJSModule("status", "0" ) . "<h2>{$this->lang->words['status_updates__overview']}</h2>
<div class=\"master_list status_updates\">
" . (($this->memberData['member_id'] AND $this->settings['friends_enabled']) ? ("
	<div class=\"controls\">
		<div class=\"buttons\">
			<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=members&amp;module=profile&amp;section=status&amp;type=all", "public",'' ), "true", "members_status_all" ) . "' class=\"button\">{$this->lang->words['status__all_updates']}</a>
			<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=members&amp;module=profile&amp;section=status&amp;type=friends", "public",'' ), "true", "members_status_friends" ) . "' class=\"button\">{$this->lang->words['status__myfriends']}</a>
		</div>
	</div>
") : ("")) . "
<div id='board_index' class='clearfix'>
	<div id='status_standalone_page'>
		<div id=\"status_wrapper\">
			" . ((count( $updates )) ? ("
				" . ( method_exists( $this->registry->getClass('output')->getTemplate('profile'), 'statusUpdates' ) ? $this->registry->getClass('output')->getTemplate('profile')->statusUpdates($updates) : '' ) . "
			") : ("
				<p class='no_messages'>{$this->lang->words['status_updates_none']}</p>
			")) . "
		</div>
	</div>
</div>
</div>";
return $IPBHTML;
}

/* -- tabFriends --*/
function tabFriends($friends=array(), $member=array(), $pagination='') {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_profile', $this->_funcHooks['tabFriends'] ) )
{
$count_d019f2c119d6249d5c9d2796a61dadf3 = is_array($this->functionData['tabFriends']) ? count($this->functionData['tabFriends']) : 0;
$this->functionData['tabFriends'][$count_d019f2c119d6249d5c9d2796a61dadf3]['friends'] = $friends;
$this->functionData['tabFriends'][$count_d019f2c119d6249d5c9d2796a61dadf3]['member'] = $member;
$this->functionData['tabFriends'][$count_d019f2c119d6249d5c9d2796a61dadf3]['pagination'] = $pagination;
}
$IPBHTML .= "<div class='general_box'>
	" . (($this->settings['friends_enabled'] AND $this->memberData['g_can_add_friends'] AND $member['pp_setting_count_friends']) ? ("<div class='friend_list clear' id='friend_list'>
			<h3 class='bar'>{$this->lang->words['m_title_friends']}</h3>
			" . ((is_array($friends) and count($friends)) ? ("
				<ul class='clearfix'>
				".$this->__f__de41aef27f4828dbb8a21ab1a9d7c1e2($friends,$member,$pagination)."				</ul>				
			") : ("
				<p>
					<em>{$member['members_display_name']} {$this->lang->words['no_friends_yet']}</em>
				</p>
			")) . "
		</div>
		<br />
		{$pagination}") : ("")) . "
</div>";
return $IPBHTML;
}


function __f__de41aef27f4828dbb8a21ab1a9d7c1e2($friends=array(), $member=array(), $pagination='')
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $friends as $friend )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
					<li>
						<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showuser={$friend['member_id']}", "public",'' ), "{$friend['members_seo_name']}", "showuser" ) . "' title='{$this->lang->words['view_profile']}' class='ipsUserPhotoLink'>
							<img src='{$friend['pp_small_photo']}' alt='{$this->lang->words['photo']}' class='ipsUserPhoto ipsUserPhoto_medium' />
						</a><br />
						<span class='name'>
							" . IPSMember::makeProfileLink($friend['members_display_name_short'], $friend['member_id'], $friend['members_seo_name']) . "
						</span>
					</li>
				
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

/* -- tabNoContent --*/
function tabNoContent($langkey) {
$IPBHTML = "";
$IPBHTML .= "<h3 class='bar'>{$this->lang->words['tab_message_h']}</h3>
<div class='general_box'>
	{$this->lang->words[ $langkey ]}
</div>";
return $IPBHTML;
}

/* -- tabPosts --*/
function tabPosts($content) {
$IPBHTML = "";
$IPBHTML .= "<h3 class='bar'>{$this->lang->words['posts_made']}</h3>
<div class='general_box alt'>
	<ol>
		$content
	</ol>
</div>";
return $IPBHTML;
}

/* -- tabReputation --*/
function tabReputation($member, $currentApp='', $type='', $supportedApps=array(), $processedResults='', $pagination='') {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_profile', $this->_funcHooks['tabReputation'] ) )
{
$count_4ad595db4079d2076d0f5990ea131387 = is_array($this->functionData['tabReputation']) ? count($this->functionData['tabReputation']) : 0;
$this->functionData['tabReputation'][$count_4ad595db4079d2076d0f5990ea131387]['member'] = $member;
$this->functionData['tabReputation'][$count_4ad595db4079d2076d0f5990ea131387]['currentApp'] = $currentApp;
$this->functionData['tabReputation'][$count_4ad595db4079d2076d0f5990ea131387]['type'] = $type;
$this->functionData['tabReputation'][$count_4ad595db4079d2076d0f5990ea131387]['supportedApps'] = $supportedApps;
$this->functionData['tabReputation'][$count_4ad595db4079d2076d0f5990ea131387]['processedResults'] = $processedResults;
$this->functionData['tabReputation'][$count_4ad595db4079d2076d0f5990ea131387]['pagination'] = $pagination;
}
$IPBHTML .= "<div class='general_box'>
	<div class='maintitle ipsFilterbar clearfix'>
		" . ((count( $supportedApps ) > 1) ? ("
			<ul class='ipsList_inline ipsType_smaller left'>
				".$this->__f__f6b899b30d117c3b271882ea74961a91($member,$currentApp,$type,$supportedApps,$processedResults,$pagination)."			</ul>
		") : ("")) . "
		<ul class='ipsList_inline ipsType_smaller right'>
			" . (($this->memberData['gbw_view_reps']) ? ("<li " . (($type == 'given') ? ("class='active'") : ("")) . ">
					<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showuser={$member['member_id']}&amp;tab=reputation&amp;app_tab={$currentApp}&amp;type=given", "public",'' ), "{$member['members_seo_name']}", "showuser" ) . "'>
						{$this->lang->words['reputation_given']}
					</a>
				</li>") : ("")) . "
			<li " . (($type == 'received') ? ("class='active'") : ("")) . ">
				<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showuser={$member['member_id']}&amp;tab=reputation&amp;app_tab={$currentApp}&amp;type=received", "public",'' ), "{$member['members_seo_name']}", "showuser" ) . "'>
					{$this->lang->words['reputation_received']}
				</a>
			</li>
		</ul>
	</div>
	" . (($processedResults) ? ("
		{$processedResults}
	") : ("
		<div class='no_messages'>{$this->lang->words['reputation_empty']}</div>
	")) . "
	" . (($pagination) ? ("
		<br />
		{$pagination}
		<br class='clear' />
	") : ("")) . "
</div>";
return $IPBHTML;
}


function __f__f6b899b30d117c3b271882ea74961a91($member, $currentApp='', $type='', $supportedApps=array(), $processedResults='', $pagination='')
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $supportedApps as $_app )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
					<li " . (($_app['app_directory'] == $currentApp) ? ("class='active'") : ("")) . ">
						<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showuser={$member['member_id']}&amp;tab=reputation&amp;app_tab={$_app['app_directory']}&amp;type={$type}", "public",'' ), "{$member['members_seo_name']}", "showuser" ) . "'>
							" . IPSLib::getAppTitle($_app['app_directory']) . "
						</a>
					</li>
				
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

/* -- tabReputation_calendar --*/
function tabReputation_calendar($results) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_profile', $this->_funcHooks['tabReputation_calendar'] ) )
{
$count_45529e73de360727b4752ab268555dbb = is_array($this->functionData['tabReputation_calendar']) ? count($this->functionData['tabReputation_calendar']) : 0;
$this->functionData['tabReputation_calendar'][$count_45529e73de360727b4752ab268555dbb]['results'] = $results;
}
$IPBHTML .= "<div class='ipsBox'>
	".$this->__f__3116544f56b37dd5273bb85b1e47e8ec($results)."</div>";
return $IPBHTML;
}


function __f__3116544f56b37dd5273bb85b1e47e8ec($results)
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $results as $data )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
		" . (($data['type'] == 'comment_id') ? ("<div class='post_block hentry clear no_sidebar ipsBox_container'>
				<div class='post_wrap'>
					" . (($data['comment_mid']) ? ("
						<h3 class='row2'>
					") : ("
						<h3 class='guest row2'>
					")) . "
						<a href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=calendar&amp;module=calendar&amp;section=view&amp;do=showevent&amp;event_id={$data['event_id']}", "public",'' ), "{$data['event_title_seo']}", "cal_event" ) . "\">" . IPSText::truncate( $data['event_title'], 80) . "</a>
					</h3>
					<div class='post_body'>
						<p class='posted_info desc lighter ipsType_small'>
							<img src='{$data['pp_thumb_photo']}' class='ipsUserPhoto ipsUserPhoto_tiny' /> {$this->lang->words['posted']} {$this->lang->words['by']}
							" . (($data['member_id']) ? ("<span class=\"author vcard\">" . ( method_exists( $this->registry->getClass('output')->getTemplate('global'), 'userHoverCard' ) ? $this->registry->getClass('output')->getTemplate('global')->userHoverCard($data) : '' ) . "</span>") : ("{$data['members_display_name']}")) . "
							{$this->lang->words['on']} <abbr class=\"published\" title=\"" . date( 'c', $data['comment_date'] ) . "\">" . IPSText::htmlspecialchars($this->registry->getClass('class_localization')->getDate($data['comment_date'],"long", 0)) . "</abbr>
							{$this->lang->words['cal_in']}
							<a href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=calendar&amp;module=calendar&amp;section=view&amp;do=showevent&amp;event_id={$data['event_id']}", "public",'' ), "{$data['event_title_seo']}", "cal_event" ) . "\">{$data['event_title']}</a>
						</p>
						<div class='post entry-content clearfix'>
							{$data['comment_text']}
							<br />
							" . ( method_exists( $this->registry->getClass('output')->getTemplate('global_other'), 'repButtons' ) ? $this->registry->getClass('output')->getTemplate('global_other')->repButtons($data, array_merge( array( 'primaryId' => $data['comment_id'], 'domLikeStripId' => 'like_comment_id_' . $data['comment_id'], 'domCountId' => 'rep_comment_id_' . $data['comment_id'], 'app' => 'calendar', 'type' => 'comment_id', 'likeFormatted' => $data['repButtons']['formatted'] ), $data )) : '' ) . "
						</div>
					</div>
				</div>
				<br />
			</div>
			<br />") : ("<div class='post_block hentry clear no_sidebar ipsBox_container'>
				<div class='post_wrap'>
					" . (($data['event_member_id']) ? ("
						<h3 class='row2'>
					") : ("
						<h3 class='guest row2'>
					")) . "
						<a href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=calendar&amp;module=calendar&amp;section=view&amp;do=showevent&amp;event_id={$data['event_id']}", "public",'' ), "{$data['event_title_seo']}", "cal_event" ) . "\">" . IPSText::truncate( $data['event_title'], 80) . "</a>
					</h3>
					<div class='post_body'>
						<p class='posted_info desc lighter ipsType_small'>
							<img src='{$data['pp_thumb_photo']}' class='ipsUserPhoto ipsUserPhoto_tiny' /> {$this->lang->words['posted']} {$this->lang->words['by']}
							" . (($data['member_id']) ? ("<span class=\"author vcard\">" . ( method_exists( $this->registry->getClass('output')->getTemplate('global'), 'userHoverCard' ) ? $this->registry->getClass('output')->getTemplate('global')->userHoverCard($data) : '' ) . "</span>") : ("{$data['members_display_name']}")) . "
							{$this->lang->words['on']} <abbr class=\"published\" title=\"" . date( 'c', $data['event_saved'] ) . "\">" . IPSText::htmlspecialchars($this->registry->getClass('class_localization')->getDate($data['event_saved'],"long", 0)) . "</abbr>
						</p>
						<div class='post entry-content clearfix'>
							{$data['event_content']}
							<br />
							" . ( method_exists( $this->registry->getClass('output')->getTemplate('global_other'), 'repButtons' ) ? $this->registry->getClass('output')->getTemplate('global_other')->repButtons($data, array_merge( array( 'primaryId' => $data['event_id'], 'domLikeStripId' => 'like_event_id_' . $data['event_id'], 'domCountId' => 'rep_event_id_' . $data['event_id'], 'app' => 'calendar', 'type' => 'event_id', 'likeFormatted' => $data['repButtons']['formatted'] ), $data )) : '' ) . "
						</div>
					</div>
				</div>
				<br />
			</div>
			<br />")) . "
	
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

/* -- tabReputation_posts --*/
function tabReputation_posts($results) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_profile', $this->_funcHooks['tabReputation_posts'] ) )
{
$count_4f2f387a199f7133699ccda341ddda65 = is_array($this->functionData['tabReputation_posts']) ? count($this->functionData['tabReputation_posts']) : 0;
$this->functionData['tabReputation_posts'][$count_4f2f387a199f7133699ccda341ddda65]['results'] = $results;
}
$IPBHTML .= "<div class='ipsBox'>
	".$this->__f__13e3e23b4a1a3fa27dcd252b355beecf($results)."</div>";
return $IPBHTML;
}


function __f__29e6b3d3289caa03d7c441f1246096e3($results,$data='')
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $data['_forum_trail'] as $i => $f )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
								" . (($i+1 == count( $data['_forum_trail'] )) ? ("<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "{$f[1]}", "public",'' ), "{$f[2]}", "showforum" ) . "'>{$f[0]}</a>") : ("")) . "
							
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

function __f__13e3e23b4a1a3fa27dcd252b355beecf($results)
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $results as $data )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
		<div class='post_block hentry clear no_sidebar ipsBox_container'>
			<div class='post_wrap'>
				" . (($data['author_id']) ? ("
					<h3 class='row2'>
				") : ("
					<h3 class='guest row2'>
				")) . "
					<span class='post_id right ipsType_small desc blend_links'><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showtopic={$data['topic_id']}&amp;view=findpost&amp;p={$data['pid']}", "public",'' ), "{$data['title_seo']}", "showtopic" ) . "' rel='bookmark' title='{$data['topic_title']}{$this->lang->words['link_to_post']} #{$data['pid']}'>#{$data['pid']}</a></span>
					<a href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showtopic={$data['tid']}", "public",'' ), "{$data['title_seo']}", "showtopic" ) . "\">" . IPSText::truncate( $data['topic_title'], 80) . "</a>
				</h3>
				<div class='post_body'>
					<p class='posted_info desc lighter ipsType_small'>
						<img src='{$data['pp_thumb_photo']}' class='ipsUserPhoto ipsUserPhoto_tiny' /> {$this->lang->words['posted']} {$this->lang->words['search_by']}
						" . (($data['member_id']) ? ("<span class=\"author vcard\">" . ( method_exists( $this->registry->getClass('output')->getTemplate('global'), 'userHoverCard' ) ? $this->registry->getClass('output')->getTemplate('global')->userHoverCard($data) : '' ) . "</span>") : ("{$data['members_display_name']}")) . "
						{$this->lang->words['on']} <abbr class=\"published\" title=\"" . date( 'c', $data['post_date'] ) . "\">" . IPSText::htmlspecialchars($this->registry->getClass('class_localization')->getDate($data['post_date'],"long", 0)) . "</abbr>
						" . (($data['_forum_trail']) ? ("
							in
							".$this->__f__29e6b3d3289caa03d7c441f1246096e3($results,$data)."						") : ("")) . "
					</p>
					<div class='post entry-content clearfix'>
						{$data['post']}
						<br />
						" . ( method_exists( $this->registry->getClass('output')->getTemplate('global_other'), 'repButtons' ) ? $this->registry->getClass('output')->getTemplate('global_other')->repButtons($data, array_merge( array( 'primaryId' => $data['pid'], 'domLikeStripId' => 'like_post_' . $data['pid'], 'domCountId' => 'rep_post_' . $data['pid'], 'app' => 'forums', 'type' => 'pid', 'likeFormatted' => $data['repButtons']['formatted'], 'has_given_rep' => $data['repButtons']['iLike'] ), $data )) : '' ) . "
					</div>
				</div>
			</div>
			<br />
		</div>
		<br />
	
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

/* -- tabSingleColumn --*/
function tabSingleColumn($row=array(), $read_more_link='', $url='', $title='') {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_profile', $this->_funcHooks['tabSingleColumn'] ) )
{
$count_6f9a2fa077393d93ce64f3d99396e954 = is_array($this->functionData['tabSingleColumn']) ? count($this->functionData['tabSingleColumn']) : 0;
$this->functionData['tabSingleColumn'][$count_6f9a2fa077393d93ce64f3d99396e954]['row'] = $row;
$this->functionData['tabSingleColumn'][$count_6f9a2fa077393d93ce64f3d99396e954]['read_more_link'] = $read_more_link;
$this->functionData['tabSingleColumn'][$count_6f9a2fa077393d93ce64f3d99396e954]['url'] = $url;
$this->functionData['tabSingleColumn'][$count_6f9a2fa077393d93ce64f3d99396e954]['title'] = $title;
}
$IPBHTML .= "<li style='list-style:none'>
	" . (($title) ? ("" . (($url) ? ("
			<h4><a href=\"$url\" title=\"{$this->lang->words['view_topic']}\">$title</a></h4>
		") : ("
			<h4>$title</h4>
		")) . "") : ("")) . "
	<p class='posted_info'>{$this->lang->words['posted']} {$row['_date_array']['mday']} {$row['_date_array']['smonth']} {$row['_date_array']['year']}</p>
	<div class='post_body'>
		{$row['post']}
	</div>
</li>";
return $IPBHTML;
}

/* -- tabStatusUpdates --*/
function tabStatusUpdates($updates=array(), $actions, $member=array()) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_profile', $this->_funcHooks['tabStatusUpdates'] ) )
{
$count_a5f2e193b5eac4ee856868518098548d = is_array($this->functionData['tabStatusUpdates']) ? count($this->functionData['tabStatusUpdates']) : 0;
$this->functionData['tabStatusUpdates'][$count_a5f2e193b5eac4ee856868518098548d]['updates'] = $updates;
$this->functionData['tabStatusUpdates'][$count_a5f2e193b5eac4ee856868518098548d]['actions'] = $actions;
$this->functionData['tabStatusUpdates'][$count_a5f2e193b5eac4ee856868518098548d]['member'] = $member;
}

if ( ! isset( $this->registry->templateStriping['recent_status'] ) ) {
$this->registry->templateStriping['recent_status'] = array( FALSE, "row1","row2");
}
$IPBHTML .= "" . $this->registry->getClass('output')->addJSModule("status", "0" ) . "<div class='status_profile_page'>
	" . (($this->memberData['member_id'] AND ( $this->memberData['member_id'] == $member['member_id'] ) AND $this->registry->getClass('memberStatus')->canCreate( $member )) ? ("
		<div class='status_update row2 altrow'>
			<input type='text' id='statusUpdate' style='width:80%'> <input type='submit' class='input_submit' id='statusSubmit' value='{$this->lang->words['_rarr']}' />
		</div>
	") : ("")) . "
	<div id=\"status_wrapper\">
		" . ((count( $updates )) ? ("
			" . ( method_exists( $this->registry->getClass('output')->getTemplate('profile'), 'statusUpdates' ) ? $this->registry->getClass('output')->getTemplate('profile')->statusUpdates($updates) : '' ) . "
		") : ("
			<p>{$this->lang->words['status_updates_none']}</p>
		")) . "
	</div>
</div>
<div class='status_profile_actions'>
	" . ((count( $actions )) ? ("".$this->__f__0f6df9d939f21e375eefda2384fec2b3($updates,$actions,$member)."		<br />
		<div class='right'>
			<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=members&amp;module=profile&amp;section=status&amp;member_id={$member['member_id']}", "public",'' ), "true", "members_status_all" ) . "'>View All</a>
		</div>
	") : ("
		<p>{$this->lang->words['status_actions_none']}</p>
	")) . "
</div>";
return $IPBHTML;
}


function __f__0f6df9d939f21e375eefda2384fec2b3($updates=array(), $actions, $member=array())
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $actions as $id => $row )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
			<div class='" .  IPSLib::next( $this->registry->templateStriping["recent_status"] ) . " clear'>
				<div class='status_action_left'><img src=\"{$this->settings['img_url']}/profile/commentAction.gif\" alt=\"\" /></div>
				<div class='status_action_right'>" . ( method_exists( $this->registry->getClass('output')->getTemplate('global'), 'userHoverCard' ) ? $this->registry->getClass('output')->getTemplate('global')->userHoverCard($row) : '' ) . "
				replied to " . ( method_exists( $this->registry->getClass('output')->getTemplate('global'), 'userHoverCard' ) ? $this->registry->getClass('output')->getTemplate('global')->userHoverCard($row['owner']) : '' ) . "'s
				<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=members&amp;module=profile&amp;section=status&amp;type=all&amp;status_id={$row['action_status_id']}", "public",'' ), "true", "members_status_all" ) . "'>status</a>
				<br /><span class='desc'>{$row['action_date_formatted_short']}</span>
				</div>
			</div>
		
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

/* -- tabTopics --*/
function tabTopics($content) {
$IPBHTML = "";
$IPBHTML .= "<h3 class='bar'>{$this->lang->words['topics_started']}</h3>
<div class='general_box alt'>
	<ol>
		$content
	</ol>
</div>";
return $IPBHTML;
}


}


/*--------------------------------------------------*/
/* END OF FILE                                      */
/*--------------------------------------------------*/

?>