<?php
/*--------------------------------------------------*/
/* FILE GENERATED BY INVISION POWER BOARD 3         */
/* CACHE FILE: Skin set id: 2               */
/* CACHE FILE: Generated: Mon, 10 Jun 2013 14:58:20 GMT */
/* DO NOT EDIT DIRECTLY - THE CHANGES WILL NOT BE   */
/* WRITTEN TO THE DATABASE AUTOMATICALLY            */
/*--------------------------------------------------*/

class skin_topic_2 extends skinMaster{

/**
* Construct
*/
function __construct( ipsRegistry $registry )
{
	parent::__construct( $registry );
	

$this->_funcHooks = array();
$this->_funcHooks['ajaxSharePost'] = array('shareLinksStrip','shareLinksJS');
$this->_funcHooks['announcement_show'] = array('canmanage','disablelightbox');
$this->_funcHooks['archiveStatusMessage'] = array('isAdminArchivedTop','isRestoring','isWorking','isModArchived','isAdminArchived','isArchivedDone','isAdminArchivedTop','isModArchived','isArchivedDone','isAdminArchived','isRestoring');
$this->_funcHooks['hookFacebookLike'] = array('checkAccess','fbAppIdPresent');
$this->_funcHooks['likeSummaryContents'] = array('likeOnlyMembers');
$this->_funcHooks['pollDisplay'] = array('lastVoter','poll_voters','hasVoters','viewVoters','votersJs','multiVote','showingResults','poll_choices','votedClass','noGuestVote','poll_questions','showPollResults','publicPollNotice','deleteVote','cast','viewVotersLink','alreadyDisplayVotes','displayVotes','youCreatedPoll','voteButtonVoted','voteButtonMid','voteButton','editPoll','hasVoters','multiVote','showingResults','poll_choices','votedClass','noGuestVote','poll_questions','showPollResults','publicPollNotice','deleteVote','cast','viewVotersLink','alreadyDisplayVotes','displayVotes','youCreatedPoll','voteButtonVoted','voteButtonMid','voteButton','editPoll');
$this->_funcHooks['post'] = array('sDeleted','isSolvedCss','postQueued','noRep','posRep','negRep','repIgnored','userIgnoredLang','userIgnoredLangTwo','userIgnored','isNotIgnoring','postMid','hasPages','postModSelected','postModCheckbox','postMember','accessModCP','postAdmin','postIp','isSolvedSausage','repHighlight','postEditByReason','postEditBy','repButtonsLike','postSignature','canDelete','approveUnapprove','canEdit','controlsForUnapprovedPost','hideNormalControlsForUnapprovedPost','canUnanswer','notAnswered','isAnswered','canAnswerTopic','multiquote','replyButton','replyButtonWarn','canDelete','canHide','canEdit','postIsReported','canReportPost','reportedPostData','sDeletedNot','initIgnoredPost','adCodeCheck','sDeletedNotMQ','isSolvedCss','isSolvedSausage','postMember','userIgnoredLang','userIgnoredLangTwo','postEditByReason','postEditBy','userIgnored','canEdit','canDelete','deleted','sDeleted');
$this->_funcHooks['quickEditPost'] = array('editReasonQe','editByQe','editReasonQe','editByQe');
$this->_funcHooks['show_attachment_title'] = array('attachType','attach','attachType','attach');
$this->_funcHooks['Show_attachments'] = array('hasmime','hasmime');
$this->_funcHooks['softDeletedPostBit'] = array('postMid','postModSelected','postModCheckbox','postMember','postAdmin','postIp','showReason','postEditByReason','postEditBy','postSignature','showPost','sdOptions','postMember','showReason','sdOptions','userIgnoredLang','userIgnoredLangTwo','postEditByReason','postEditBy','userIgnored','canEdit','canDelete');
$this->_funcHooks['topicViewTemplate'] = array('isDelete','mod_links','mm','optRepFilterSelected','reputation_levels','post_data','topics','allowRating','canDeleteUrls','disablelightbox','followsismember','rate1','rate2','rate3','rate4','rate5','hasRates','jsHasRates','topicRating','hasTags','canSeeProfiles1','canSeeProfiles2','hasPagesBA','samePageBA','hasPagesBA2','samePageBA2','bestAnswer','showReason','tbdSoftRestore','tbdRestore','topicHasBeenHidden','topicHasBeenDeleted','closedButtonLink','closedButtonLink','pollOnly','isMemberTop','replyButtonLink','replyButton','closedButton','topicDescription','modOptions','isArchivedPostBox','mmModOptions','modOptionsDropdown','repFilterDefault','reputationFilter','optSelectStar','repFilterOptions','reputationFilter','hasPosts','modOptions2','hasUnreadNext','isLockedFR','isMember','loadJsManually','fastReply','canShare','sameTagged','auNames','topicActiveUsers','scrollToPost','post_data','mod_links','hasPagesBA2','samePageBA2','bestAnswer','closedButtonLink','replyButtonLink','replyButton','closedButton','hasPosts','canShare','modOptionsDropdown','closedButtonLink','replyButtonLink','replyButton','closedButton','fastReply','scrollToPost','notexist','scrollToPost2');


}

/* -- ajax__deletePost --*/
function ajax__deletePost() {
$IPBHTML = "";
$IPBHTML .= "<!--no data in this master skin-->";
return $IPBHTML;
}

/* -- ajax__doDeletePost --*/
function ajax__doDeletePost() {
$IPBHTML = "";
$IPBHTML .= "<!--no data in this master skin-->";
return $IPBHTML;
}

/* -- ajax__restoreTopicDialog --*/
function ajax__restoreTopicDialog() {
$IPBHTML = "";
$IPBHTML .= "<!--no data in this master skin-->";
return $IPBHTML;
}

/* -- ajaxSharePost --*/
function ajaxSharePost($topic, $post, $url, $sharelinks) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_topic', $this->_funcHooks['ajaxSharePost'] ) )
{
$count_e294b315cf882f4665efbba5dca14464 = is_array($this->functionData['ajaxSharePost']) ? count($this->functionData['ajaxSharePost']) : 0;
$this->functionData['ajaxSharePost'][$count_e294b315cf882f4665efbba5dca14464]['topic'] = $topic;
$this->functionData['ajaxSharePost'][$count_e294b315cf882f4665efbba5dca14464]['post'] = $post;
$this->functionData['ajaxSharePost'][$count_e294b315cf882f4665efbba5dca14464]['url'] = $url;
$this->functionData['ajaxSharePost'][$count_e294b315cf882f4665efbba5dca14464]['sharelinks'] = $sharelinks;
}
$IPBHTML .= "<!--no data in this master skin-->";
return $IPBHTML;
}

/* -- ajaxSigCloseMenu --*/
function ajaxSigCloseMenu($post) {
$IPBHTML = "";
$IPBHTML .= "<!--no data in this master skin-->";
return $IPBHTML;
}

/* -- announcement_show --*/
function announcement_show($announce="",$author="") {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_topic', $this->_funcHooks['announcement_show'] ) )
{
$count_1ca7159596a05a16e05692973c44028f = is_array($this->functionData['announcement_show']) ? count($this->functionData['announcement_show']) : 0;
$this->functionData['announcement_show'][$count_1ca7159596a05a16e05692973c44028f]['announce'] = $announce;
$this->functionData['announcement_show'][$count_1ca7159596a05a16e05692973c44028f]['author'] = $author;
}
$IPBHTML .= "<div class='master_list'>
	
	<h2>" . IPSText::truncate( $announce['announce_title'], 45 ) . "</h2>
	<div class='topic_reply'>
		<h2 class='secondary' style='padding-left: 10px;'><a class=\"url fn\" href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showuser={$author['member_id']}", "public",'' ), "{$author['members_seo_name']}", "showuser" ) . "'>{$author['members_display_name']}</a></h2>
		<div class='post'>
			{$announce['announce_post']}
		</div>
	</div>
</div>";
return $IPBHTML;
}

/* -- archiveStatusMessage --*/
function archiveStatusMessage($topic, $forum) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_topic', $this->_funcHooks['archiveStatusMessage'] ) )
{
$count_7e65581085ded9bf45517caa4bb5640f = is_array($this->functionData['archiveStatusMessage']) ? count($this->functionData['archiveStatusMessage']) : 0;
$this->functionData['archiveStatusMessage'][$count_7e65581085ded9bf45517caa4bb5640f]['topic'] = $topic;
$this->functionData['archiveStatusMessage'][$count_7e65581085ded9bf45517caa4bb5640f]['forum'] = $forum;
}
$IPBHTML .= "" . (($this->registry->class_forums->fetchArchiveTopicType($topic) == 'restore') ? ("<div class='message unspecific'>
		" . (($this->memberData['g_access_cp']) ? ("{$this->lang->words['top_archived_topic_restore']}") : ("{$this->lang->words['top_archived_topic']}")) . "
	</div>") : ("<div class='message unspecific'>
		{$this->lang->words['top_archived_topic']}
		" . (($this->memberData['is_mod']) ? ("{$this->lang->words['top_archived_topic_mod']}") : ("")) . "
		" . (($this->memberData['g_access_cp']) ? ("<br />
			" . (($this->registry->class_forums->fetchArchiveTopicType( $topic ) == 'archived') ? ("
				<a href='#' class='ipsButton_secondary' data-clicklaunch=\"restoreTopicDialog\" data-scope=\"topic\">{$this->lang->words['top_archived_topic_admin']}</a>
				<a href='#' class='ipsButton_secondary important' data-clicklaunch=\"deleteTopicDialog\" data-scope=\"topic\">{$this->lang->words['tarchived_delete']}</a>
			") : ("")) . "") : ("")) . "
	</div>")) . "";
return $IPBHTML;
}

/* -- hookFacebookLike --*/
function hookFacebookLike() {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_topic', $this->_funcHooks['hookFacebookLike'] ) )
{
$count_28c0d96f52275b0c1388fe90102ea306 = is_array($this->functionData['hookFacebookLike']) ? count($this->functionData['hookFacebookLike']) : 0;
}
$IPBHTML .= "<!--no data in this master skin-->";
return $IPBHTML;
}

/* -- likeSummary --*/
function likeSummary($data, $relId, $opts) {
$IPBHTML = "";
$IPBHTML .= "<!--no data in this master skin-->";
return $IPBHTML;
}

/* -- likeSummaryContents --*/
function likeSummaryContents($data, $relId, $opts=array()) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_topic', $this->_funcHooks['likeSummaryContents'] ) )
{
$count_97cb6615943605aa29ac2329660d382a = is_array($this->functionData['likeSummaryContents']) ? count($this->functionData['likeSummaryContents']) : 0;
$this->functionData['likeSummaryContents'][$count_97cb6615943605aa29ac2329660d382a]['data'] = $data;
$this->functionData['likeSummaryContents'][$count_97cb6615943605aa29ac2329660d382a]['relId'] = $relId;
$this->functionData['likeSummaryContents'][$count_97cb6615943605aa29ac2329660d382a]['opts'] = $opts;
}
$IPBHTML .= "<!--no data in this master skin-->";
return $IPBHTML;
}

/* -- pollDisplay --*/
function pollDisplay($poll, $topicData, $forumData, $pollData, $showResults, $editPoll=1) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_topic', $this->_funcHooks['pollDisplay'] ) )
{
$count_d60f2d947372b9bfc84d8b9520086b38 = is_array($this->functionData['pollDisplay']) ? count($this->functionData['pollDisplay']) : 0;
$this->functionData['pollDisplay'][$count_d60f2d947372b9bfc84d8b9520086b38]['poll'] = $poll;
$this->functionData['pollDisplay'][$count_d60f2d947372b9bfc84d8b9520086b38]['topicData'] = $topicData;
$this->functionData['pollDisplay'][$count_d60f2d947372b9bfc84d8b9520086b38]['forumData'] = $forumData;
$this->functionData['pollDisplay'][$count_d60f2d947372b9bfc84d8b9520086b38]['pollData'] = $pollData;
$this->functionData['pollDisplay'][$count_d60f2d947372b9bfc84d8b9520086b38]['showResults'] = $showResults;
$this->functionData['pollDisplay'][$count_d60f2d947372b9bfc84d8b9520086b38]['editPoll'] = $editPoll;
}
$IPBHTML .= "<div class='general_box alt poll' id='poll_{$poll['pid']}'>
	<form action=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=forums&amp;module=extras&amp;section=vote&amp;t={$topicData['tid']}&amp;page={$this->request['page']}&amp;do=add&amp;secure_key={$this->member->form_hash}", "public",'' ), "", "" ) . "\" name='pollForm' method=\"post\">
		<h3>{$this->lang->words['poll']} {$poll['poll_question']}" . (($showResults) ? (" <span class='desc'>({$poll['_totalVotes']} {$this->lang->words['poll_vote_casted']})</span>") : ("")) . "</h3>
		" . (($this->settings['poll_allow_public'] AND $poll['poll_view_voters'] AND ! $showResults) ? ("
			<div class='message unspecified'>{$this->lang->words['poll_public_notice']}</div>
		") : ("")) . "
		".$this->__f__3404f3acb30165b297258a59dadac5c3($poll,$topicData,$forumData,$pollData,$showResults,$editPoll)."		<fieldset class='submit'>
			<legend>{$this->lang->words['poll_vote']}</legend>
			" . (($topicData['state'] != 'closed') ? ("" . (($this->memberData['member_id']) ? ("" . (($poll['_memberVoted']) ? ("" . (($this->settings['poll_allow_vdelete'] OR $this->memberData['g_is_supmod']) ? ("
							<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=forums&amp;module=extras&amp;section=vote&amp;t={$topicData['tid']}&amp;page={$this->request['page']}&amp;do=delete&amp;secure_key={$this->member->form_hash}", "public",'' ), "", "" ) . "' title='{$this->lang->words['poll_delete_vote']}' id='poll_deletevote' class='button secondary'>{$this->lang->words['poll_delete_vote']}</a>
						") : ("
							{$this->lang->words['poll_you_voted']}
						")) . "") : ("" . ((($poll['starter_id'] == $this->memberData['member_id']) and ($this->settings['allow_creator_vote'] != 1)) ? ("
							{$this->lang->words['poll_you_created']}
						") : ("<!-- VOTE Button -->
							" . (($this->request['mode'] != 'show') ? ("
								<input class='button secondary' type=\"submit\" name=\"submit\" value=\"{$this->lang->words['poll_add_vote']}\" title=\"{$this->lang->words['tt_poll_vote']}\" />
							") : ("")) . "
							<!-- SHOW Button -->
							" . (($this->settings['allow_result_view'] == 1) ? ("" . (($this->request['mode'] == 'show') ? ("" . ((! $poll_view_voters) ? ("
										<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showtopic={$topicData['tid']}&amp;page={$this->request['page']}", "public",'' ), "{$topicData['title_seo']}", "showtopic" ) . "' title='{$this->lang->words['tt_poll_svote']}' id='poll_nullvote' class='button secondary'>{$this->lang->words['pl_show_vote']}</a>
									") : ("")) . "") : ("
									<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showtopic={$topicData['tid']}&amp;mode=show&amp;page={$this->request['page']}", "public",'' ), "{$topicData['title_seo']}", "showtopic" ) . "' title='{$this->lang->words['tt_poll_show']}' id='poll_showresults' class='button secondary'>{$this->lang->words['pl_show_results']}</a>
								")) . "") : ("
								<input class='button secondary' type=\"submit\" name=\"nullvote\" value=\"{$this->lang->words['poll_null_vote']}\" title=\"{$this->lang->words['tt_poll_null']}\" />
							")) . "")) . "")) . "") : ("
					{$this->lang->words['poll_no_guests']}
				")) . "") : ("")) . "
			" . (($editPoll) ? ("
				<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=forums&amp;module=post&amp;section=post&amp;do=edit_post&amp;f={$poll['forum_id']}&amp;t={$poll['tid']}&amp;p={$topicData['topic_firstpost']}", "publicWithApp",'' ), "", "" ) . "' title='{$this->lang->words['poll_edit']}' class='input_submit alt' >{$this->lang->words['poll_edit']}</a>
			") : ("")) . "
		</fieldset>
	</form>
</div>";
return $IPBHTML;
}


function __f__557422b387952724b2444dec2c78fb05($poll, $topicData, $forumData, $pollData, $showResults, $editPoll=1,$questionID='',$questionData='')
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $pollData[ $questionID ]['choices'] as $choiceID => $choiceData )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
							" . (($showResults) ? ("<li class='row'>
									<span class='answer'>" . ((is_array( $choiceData['voters'] ) AND in_array( $this->memberData['member_id'], array_keys( $choiceData['voters'] ) )) ? (" " . $this->registry->getClass('output')->getReplacement("your_vote") . " ") : ("")) . "{$choiceData['choice']}</span>
									<span class='votes'> ({$choiceData['votes']} {$this->lang->words['poll_votes']} [{$choiceData['percent']}%])</span>
									<p class='progress_bar topic_poll' title='{$this->lang->words['poll_percent_of_vote']} {$choiceData['percent']}%'>
										<span style='width: {$choiceData['percent']}%'><span>{$this->lang->words['poll_percent_of_vote']} {$choiceData['percent']}%</span></span>
									</p>
								</li>") : ("" . (($choiceData['type'] == 'multi') ? ("
									<li class='row'><input type='checkbox' id='choice_{$questionID}_{$choiceID}' name='choice_{$questionID}_{$choiceID}' value='1' class='input_check' /> <label for='choice_{$questionID}_{$choiceID}'>{$choiceData['choice']}</label></li>
								") : ("
									<li class='row'><input type='radio' name='choice[{$questionID}]' id='choice_{$questionID}_{$choiceID}' class='input_radio' value='{$choiceID}' /> <label for='choice_{$questionID}_{$choiceID}'>{$choiceData['choice']}</label></li>
								")) . "")) . "
						
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

function __f__3404f3acb30165b297258a59dadac5c3($poll, $topicData, $forumData, $pollData, $showResults, $editPoll=1)
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $pollData as $questionID => $questionData )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
			<div class='" . (($showResults) ? (" voted") : ("")) . "'>
				<h2 class='secondary'>{$pollData[ $questionID ]['question']}</h2>
				" . ((! $this->settings['allow_result_view'] AND ! $this->memberData['member_id']) ? ("
					{$this->lang->words['poll_noview_guest']}
				") : ("
					<ol>
						".$this->__f__557422b387952724b2444dec2c78fb05($poll,$topicData,$forumData,$pollData,$showResults,$editPoll,$questionID,$questionData)."					</ol>
				")) . "
			</div>
		
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

/* -- post --*/
function post($post, $displayData, $topic, $forum=array()) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_topic', $this->_funcHooks['post'] ) )
{
$count_74b6a98508e16bd9d9539263a3ba083b = is_array($this->functionData['post']) ? count($this->functionData['post']) : 0;
$this->functionData['post'][$count_74b6a98508e16bd9d9539263a3ba083b]['post'] = $post;
$this->functionData['post'][$count_74b6a98508e16bd9d9539263a3ba083b]['displayData'] = $displayData;
$this->functionData['post'][$count_74b6a98508e16bd9d9539263a3ba083b]['topic'] = $topic;
$this->functionData['post'][$count_74b6a98508e16bd9d9539263a3ba083b]['forum'] = $forum;
}
$IPBHTML .= "<!--post:{$post['post']['pid']}-->
" . (($post['post']['_isDeleted'] AND $post['post']['_softDeleteSee']) ? ("
	" . ( method_exists( $this->registry->getClass('output')->getTemplate('topic'), 'softDeletedPostBit' ) ? $this->registry->getClass('output')->getTemplate('topic')->softDeletedPostBit($post, $displayData['sdData'], $topic) : '' ) . "
") : ("" . ((!$post['post']['_isDeleted']) ? ("<div class='topic_reply " . (($post['post']['_isMarkedAnswered']) ? ("solved") : ("")) . "' id='entry{$post['post']['pid']}'>
			<h2 class='secondary'>
				" . ( method_exists( $this->registry->getClass('output')->getTemplate('global_other'), 'repButtons' ) ? $this->registry->getClass('output')->getTemplate('global_other')->repButtons($post['author'], array_merge( array( 'primaryId' => $post['post']['pid'], 'domLikeStripId' => 'like_post_' . $post['post']['pid'], 'domCountId' => 'rep_post_' . $post['post']['pid'], 'app' => 'forums', 'type' => 'pid', 'likeFormatted' => $post['post']['like']['formatted'] ), $post['post'] )) : '' ) . "
				" . (($post['post']['_isMarkedAnswered']) ? ("<span class='ipsBadge ipsBadge_default right' style='margin-right: 20px;'>{$this->lang->words['topic_best_answer']}</span>") : ("")) . "
				" . (($post['author']['member_id']) ? ("
					<img src='{$post['author']['pp_thumb_photo']}' alt=\"" . sprintf($this->lang->words['users_photo'],$post['author']['members_display_name']) . "\" class='photo' />
				") : ("")) . "
				" . ( method_exists( $this->registry->getClass('output')->getTemplate('global'), 'userHoverCard' ) ? $this->registry->getClass('output')->getTemplate('global')->userHoverCard($post['author']) : '' ) . "
				<span class='subtext'>" . IPSText::htmlspecialchars($this->registry->getClass('class_localization')->getDate($post['post']['post_date'],"DATE", 0)) . "</span>
			</h2>
			<div id=\"post-{$post['post']['pid']}\" class='post line_spacing'>
				" . ((($post['post']['_repignored'] == 1 || $post['post']['_ignored']) AND $this->request['view_ignored'] != $post['post']['pid']) ? ("<div class='post_ignore'>
						" . (($post['post']['_repignored'] == 1) ? ("{$this->lang->words['post_ignored_rep']}") : ("{$this->lang->words['post_ignored']}")) . " " . ( method_exists( $this->registry->getClass('output')->getTemplate('global'), 'userHoverCard' ) ? $this->registry->getClass('output')->getTemplate('global')->userHoverCard($post['author']) : '' ) . ". <a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showtopic={$post['post']['topic_id']}&amp;page={$this->request['page']}&amp;view_ignored={$post['post']['pid']}", "public",'' ), "{$topic['title_seo']}", "showtopic" ) . "#entry{$post['post']['pid']}' title='{$this->lang->words['ignore_view_post']}' id='unhide_post_{$post['post']['pid']}'>{$this->lang->words['rep_view_anyway']}</a>
						" . (($this->settings['reputation_enabled'] AND $post['post']['_repignored'] == 1) ? ("<div><a href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showtopic={$post['post']['topic_id']}&amp;page={$this->request['page']}&amp;rep_filter_set=*&amp;rep_filter=update", "public",'' ), "{$topic['title_seo']}", "showtopic" ) . "\">{$this->lang->words['post_ignore_reset_rep']}</a></div>") : ("")) . "
					</div>") : ("{$post['post']['post']}
					{$post['post']['attachmentHtml']}
					
					" . (($post['post']['edit_by']) ? ("<br />
						<strong>{$post['post']['edit_by']}</strong>
						" . (($post['post']['post_edit_reason'] != '') ? ("
							<br />
							<span class='subtext'>{$post['post']['post_edit_reason']}</span>
						") : ("")) . "") : ("")) . "")) . "
			</div>
			<div id=\"post-{$post['post']['pid']}-controls\" class='post_controls'>
				<a href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "module=post&amp;section=post&amp;do=reply_post&amp;f={$this->request['f']}&amp;t={$this->request['t']}&amp;qpid={$post['post']['pid']}", "publicWithApp",'' ), "", "" ) . "\" title=\"{$this->lang->words['tt_reply_to_post']}\">{$this->lang->words['post_reply']}</a>
				" . (($post['post']['_can_edit'] === TRUE) ? ("
					<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "module=post&amp;section=post&amp;do=edit_post&amp;f={$topic['forum_id']}&amp;t={$topic['tid']}&amp;p={$post['post']['pid']}&amp;page={$this->request['page']}", "publicWithApp",'' ), "", "" ) . "' title='{$this->lang->words['post_edit_title']}' class='edit_post' id='edit_post_{$post['post']['pid']}'>{$this->lang->words['post_edit']}</a>
				") : ("")) . "
				" . (($post['post']['_can_delete'] === TRUE) ? ("
					<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "module=moderate&amp;section=moderate&amp;do=04&amp;f={$topic['forum_id']}&amp;t={$topic['tid']}&amp;p={$post['post']['pid']}&amp;page={$this->request['page']}&amp;auth_key={$this->member->form_hash}", "publicWithApp",'' ), "", "" ) . "' title='{$this->lang->words['post_delete_title']}' class='delete_post'>{$this->lang->words['post_delete']}</a>
				") : ("")) . "
				" . (($topic['Perms']['canAnswerTopic'] && $post['post']['post_count'] > 1) ? ("" . (($post['post']['_isMarkedAnswered']) ? ("" . (($post['post']['_canMarkUnanswered']) ? ("
							<a href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "module=extras&amp;section=answer&amp;do=unanswer&amp;t={$this->request['t']}&amp;pid={$post['post']['pid']}&amp;auth_key={$this->member->form_hash}", "publicWithApp",'' ), "", "" ) . "\"  data-post-button=\"unanswer\" class='ipsButton_secondary important' data-pid=\"{$post['post']['pid']}\">{$this->lang->words['topic_mark_unsolved']}</a>
						") : ("")) . "") : ("" . (($post['post']['_canAnswer']) ? ("
							<a href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "module=extras&amp;section=answer&amp;do=answer&amp;t={$this->request['t']}&amp;pid={$post['post']['pid']}&amp;auth_key={$this->member->form_hash}", "publicWithApp",'' ), "", "" ) . "\"  data-post-button=\"answer\" class='ipsButton_secondary' data-pid=\"{$post['post']['pid']}\">{$this->lang->words['topic_mark_solved']}</a>
						") : ("")) . "")) . "") : ("")) . "
			</div>
		</div>") : ("")) . "")) . "";
return $IPBHTML;
}

/* -- quickEditPost --*/
function quickEditPost($post) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_topic', $this->_funcHooks['quickEditPost'] ) )
{
$count_adf8b030ac010ce1a7aec761826e9776 = is_array($this->functionData['quickEditPost']) ? count($this->functionData['quickEditPost']) : 0;
$this->functionData['quickEditPost'][$count_adf8b030ac010ce1a7aec761826e9776]['post'] = $post;
}
$IPBHTML .= "{$post['post']}
    {$post['attachmentHtml']}
	<br />
	" . (($post['edit_by']) ? ("<p class='edit'>
			{$post['edit_by']}
			" . (($post['post_edit_reason'] != '') ? ("
				<br />
				<span class='reason'>{$post['post_edit_reason']}</span>
			") : ("")) . "
		</p>") : ("")) . "";
return $IPBHTML;
}

/* -- show_attachment_title --*/
function show_attachment_title($title="",$data="",$type="") {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_topic', $this->_funcHooks['show_attachment_title'] ) )
{
$count_f2acd4a5356068aee9ad590455834614 = is_array($this->functionData['show_attachment_title']) ? count($this->functionData['show_attachment_title']) : 0;
$this->functionData['show_attachment_title'][$count_f2acd4a5356068aee9ad590455834614]['title'] = $title;
$this->functionData['show_attachment_title'][$count_f2acd4a5356068aee9ad590455834614]['data'] = $data;
$this->functionData['show_attachment_title'][$count_f2acd4a5356068aee9ad590455834614]['type'] = $type;
}
$IPBHTML .= "<div id='attach_wrap' class='clearfix'>
	<h4>{$title}</h4>
	<ul>
		".$this->__f__3551acefad9ebe68afa6377c9e2e14e4($title,$data,$type)."	</ul>
</div>";
return $IPBHTML;
}


function __f__3551acefad9ebe68afa6377c9e2e14e4($title="",$data="",$type="")
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $data as $file )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
			<li class='" . (($type == 'attach') ? ("attachment") : ("")) . "'>
				{$file}
			</li>
		
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

/* -- Show_attachments --*/
function Show_attachments($data="") {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_topic', $this->_funcHooks['Show_attachments'] ) )
{
$count_8f0191fe9923cfce697ac4ba30e7d699 = is_array($this->functionData['Show_attachments']) ? count($this->functionData['Show_attachments']) : 0;
$this->functionData['Show_attachments'][$count_8f0191fe9923cfce697ac4ba30e7d699]['data'] = $data;
}
$IPBHTML .= "<a href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=core&amp;module=attach&amp;section=attach&amp;attach_id={$data['attach_id']}", "public",'' ), "", "" ) . "\" title=\"{$this->lang->words['attach_dl']}\"><img src=\"{$this->settings['public_dir']}" . (($data['mime_image']) ? ("{$data['mime_image']}") : ("style_extra/mime_types/unknown.gif")) . "\" alt=\"{$this->lang->words['attached_file']}\" /></a>
&nbsp;<a href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=core&amp;module=attach&amp;section=attach&amp;attach_id={$data['attach_id']}", "public",'' ), "", "" ) . "\" title=\"{$this->lang->words['attach_dl']}\"><strong>{$data['attach_file']}</strong></a> &nbsp;&nbsp;<span class='desc'><strong>{$data['file_size']}</strong></span>
&nbsp;&nbsp;<span class=\"desc lighter\">{$data['attach_hits']} {$this->lang->words['attach_hits']}</span>";
return $IPBHTML;
}

/* -- Show_attachments_img --*/
function Show_attachments_img($data=array(), $parse_og="") {
$IPBHTML = "";
$IPBHTML .= "<a class='resized_img' rel='lightbox[{$data['attach_rel_id']}]' id='ipb-attach-url-{$data['_attach_id']}' href=\"{$this->settings['upload_url']}/{$data['o_location']}\" title=\"{$data['location']} - {$this->lang->words['attach_size']} {$data['file_size']}, {$this->lang->words['attach_ahits']} {$data['attach_hits']}\"><img itemprop=\"image\" src=\"{$this->settings['upload_url']}/{$data['o_location']}\" class='bbc_img linked-image' alt=\"{$data['location']}\" /></a>
" . (($parse_og) ? ("" . $this->registry->output->addMetaTag( 'og:image', "{$this->settings['upload_url']}/{$data['o_location']}", false ) . "
") : ("")) . "";
return $IPBHTML;
}

/* -- Show_attachments_img_thumb --*/
function Show_attachments_img_thumb($data=array(), $parse_og="") {
$IPBHTML = "";
$IPBHTML .= "<a class='resized_img' rel='lightbox[{$data['attach_rel_id']}]' id='ipb-attach-url-{$data['_attach_id']}' href=\"{$this->settings['upload_url']}/{$data['a_location']}\" title=\"{$data['location']} - {$this->lang->words['attach_size']} {$data['file_size']}, {$this->lang->words['attach_ahits']} {$data['attach_hits']}\"><img itemprop=\"image\" src=\"{$this->settings['upload_url']}/{$data['t_location']}\" id='ipb-attach-img-{$data['_attach_id']}' style='width:{$data['t_width']};height:{$data['t_height']}' class='attach' width=\"{$data['t_width']}\" height=\"{$data['t_height']}\" alt=\"{$data['location']}\" /></a>
" . (($parse_og) ? ("" . $this->registry->output->addMetaTag( 'og:image', "{$this->settings['upload_url']}/{$data['t_location']}", false ) . "
") : ("")) . "";
return $IPBHTML;
}

/* -- softDeletedPostBit --*/
function softDeletedPostBit($post, $sdData, $topic) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_topic', $this->_funcHooks['softDeletedPostBit'] ) )
{
$count_a0136c139048a3323aaa4511f30d1d80 = is_array($this->functionData['softDeletedPostBit']) ? count($this->functionData['softDeletedPostBit']) : 0;
$this->functionData['softDeletedPostBit'][$count_a0136c139048a3323aaa4511f30d1d80]['post'] = $post;
$this->functionData['softDeletedPostBit'][$count_a0136c139048a3323aaa4511f30d1d80]['sdData'] = $sdData;
$this->functionData['softDeletedPostBit'][$count_a0136c139048a3323aaa4511f30d1d80]['topic'] = $topic;
}

$_sD = $sdData[ $post['post']['pid'] ];
	$_sM = $_sD;
$IPBHTML .= "	<div class='topic_reply moderated' id='entry{$post['post']['pid']}'>
		<h2 class='secondary'>
			" . (($post['author']['member_id']) ? ("
				<img src='{$post['author']['pp_thumb_photo']}' alt=\"" . sprintf($this->lang->words['users_photo'],$post['author']['members_display_name']) . "\" class='photo' />
			") : ("")) . "
			" . ( method_exists( $this->registry->getClass('output')->getTemplate('global'), 'userHoverCard' ) ? $this->registry->getClass('output')->getTemplate('global')->userHoverCard($post['author']) : '' ) . "
			<span class='subtext'>" . IPSText::htmlspecialchars($this->registry->getClass('class_localization')->getDate($post['post']['post_date'],"DATE", 0)) . "</span>
		</h2>
		<div id='postsDelete-{$post['post']['pid']}'>
			<div class='padding'>
				<strong>{$this->lang->words['post_deleted_by']} <a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showuser={$_sD['sdl_obj_member_id']}", "public",'' ), "{$_sM['members_seo_name']}", "showuser" ) . "'>{$_sM['members_display_name']}</a> {$this->lang->words['on']} " . IPSText::htmlspecialchars($this->registry->getClass('class_localization')->getDate($_sD['sdl_obj_date'],"long", 0)) . ".</strong>
				" . (($post['post']['_softDeleteReason']) ? ("<p class='desc'>" . (($_sD['sdl_obj_reason']) ? ("{$_sD['sdl_obj_reason']}") : ("{$this->lang->words['no_reason_given']}")) . "</p>") : ("")) . "
				
				" . (($post['post']['_softDeleteContent'] OR $post['post']['_softDeleteRestore']) ? ("" . (($post['post']['_softDeleteContent']) ? ("
						<br />
						<span class='post_toggle sd_content' id='seeContent_{$post['post']['pid']}'>
							<a class='button secondary' href='#'><span>{$this->lang->words['togglepostcontent']}</span></a>
						</span>
					") : ("")) . "") : ("")) . "
			</div>
		</div>
		<div id=\"post-{$post['post']['pid']}\" class='post line_spacing' style='display: none'>
			" . ((($post['post']['_repignored'] == 1 || $post['post']['_ignored']) AND $this->request['view_ignored'] != $post['post']['pid']) ? ("<div class='post_ignore'>
					" . (($post['post']['_repignored'] == 1) ? ("{$this->lang->words['post_ignored_rep']}") : ("{$this->lang->words['post_ignored']}")) . " " . ( method_exists( $this->registry->getClass('output')->getTemplate('global'), 'userHoverCard' ) ? $this->registry->getClass('output')->getTemplate('global')->userHoverCard($post['author']) : '' ) . ". <a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showtopic={$post['post']['topic_id']}&amp;page={$this->request['page']}&amp;view_ignored={$post['post']['pid']}", "public",'' ), "{$topic['title_seo']}", "showtopic" ) . "#entry{$post['post']['pid']}' title='{$this->lang->words['ignore_view_post']}' id='unhide_post_{$post['post']['pid']}'>{$this->lang->words['rep_view_anyway']}</a>
					" . (($this->settings['reputation_enabled'] AND $post['post']['_repignored'] == 1) ? ("<div><a href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showtopic={$post['post']['topic_id']}&amp;page={$this->request['page']}&amp;rep_filter_set=*&amp;rep_filter=update", "public",'' ), "{$topic['title_seo']}", "showtopic" ) . "\">{$this->lang->words['post_ignore_reset_rep']}</a></div>") : ("")) . "
				</div>") : ("{$post['post']['post']}
				{$post['post']['attachmentHtml']}
				" . (($post['post']['edit_by']) ? ("<br />
					<strong>{$post['post']['edit_by']}</strong>
					" . (($post['post']['post_edit_reason'] != '') ? ("
						<br />
						<span class='subtext'>{$post['post']['post_edit_reason']}</span>
					") : ("")) . "") : ("")) . "")) . "
		</div>
		<div id=\"post-{$post['post']['pid']}-controls\" class='post_controls'>
			<a href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "module=post&amp;section=post&amp;do=reply_post&amp;f={$this->request['f']}&amp;t={$this->request['t']}&amp;qpid={$post['post']['pid']}", "publicWithApp",'' ), "", "" ) . "\" title=\"{$this->lang->words['tt_reply_to_post']}\">" . $this->registry->getClass('output')->getReplacement("reply_post_icon") . " {$this->lang->words['post_reply']}</a>
			" . (($post['post']['_can_edit'] === TRUE) ? ("
				<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "module=post&amp;section=post&amp;do=edit_post&amp;f={$topic['forum_id']}&amp;t={$topic['tid']}&amp;p={$post['post']['pid']}&amp;page={$this->request['page']}", "publicWithApp",'' ), "", "" ) . "' title='{$this->lang->words['post_edit_title']}' class='edit_post' id='edit_post_{$post['post']['pid']}'>" . $this->registry->getClass('output')->getReplacement("edit_post_icon") . " {$this->lang->words['post_edit']}</a>
			") : ("")) . "
			" . (($post['post']['_can_delete'] === TRUE) ? ("
				<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "module=moderate&amp;section=moderate&amp;do=04&amp;f={$topic['forum_id']}&amp;t={$topic['tid']}&amp;p={$post['post']['pid']}&amp;page={$this->request['page']}&amp;auth_key={$this->member->form_hash}", "publicWithApp",'' ), "", "" ) . "' title='{$this->lang->words['post_delete_title']}' class='delete_post'>" . $this->registry->getClass('output')->getReplacement("delete_post_icon") . " {$this->lang->words['post_delete']}</a>
			") : ("")) . "
		</div>
	</div>";
return $IPBHTML;
}

/* -- topicPreview --*/
function topicPreview($topic, $posts) {
$IPBHTML = "";
$IPBHTML .= "<!--no data in this master skin-->";
return $IPBHTML;
}

/* -- topicViewTemplate --*/
function topicViewTemplate($forum, $topic, $post_data, $displayData) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_topic', $this->_funcHooks['topicViewTemplate'] ) )
{
$count_c66d5e8bde7cc93d123aef95995b56a1 = is_array($this->functionData['topicViewTemplate']) ? count($this->functionData['topicViewTemplate']) : 0;
$this->functionData['topicViewTemplate'][$count_c66d5e8bde7cc93d123aef95995b56a1]['forum'] = $forum;
$this->functionData['topicViewTemplate'][$count_c66d5e8bde7cc93d123aef95995b56a1]['topic'] = $topic;
$this->functionData['topicViewTemplate'][$count_c66d5e8bde7cc93d123aef95995b56a1]['post_data'] = $post_data;
$this->functionData['topicViewTemplate'][$count_c66d5e8bde7cc93d123aef95995b56a1]['displayData'] = $displayData;
}

$pluginEditorHook = IPSLib::loadLibrary( IPS_ROOT_PATH . 'sources/classes/editor/composite.php', 'classes_editor_composite' );
	$editor = new $pluginEditorHook();
$IPBHTML .= "" . (($this->settings['_mobile_back_nav'] = 1) ? ("") : ("")) . "
<div class='master_list'>
	<h2>
		" . IPSText::truncate( $topic['title'], 45 ) . "
	</h2>
	" . (($displayData['best_answer_post_data']) ? ("<br />
		<div class='topic_reply feature_box'>
			<h2 class='secondary'>
				<img src='{$displayData['best_answer_post_data']['author']['pp_thumb_photo']}' class='photo' />
				<span class='ipsBadge ipsBadge_default right' style='margin-right: 10px;'>{$this->lang->words['topic_best_answer']}</span>
				" . ( method_exists( $this->registry->getClass('output')->getTemplate('global'), 'userHoverCard' ) ? $this->registry->getClass('output')->getTemplate('global')->userHoverCard($displayData['best_answer_post_data']['author']) : '' ) . "
				<span class='subtext'>" . IPSText::htmlspecialchars($this->registry->getClass('class_localization')->getDate($displayData['best_answer_post_data']['post']['post_date'],"long", 0)) . "</span>
			</h2>
			<div class='post line_spacing'>
				{$displayData['best_answer_post_data']['post']['post']} 
				" . ((isset($post_data[ $displayData['best_answer_post_data']['post']['pid'] ])) ? ("" . (($this->request['page']) ? ("
						<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showtopic={$topic['tid']}&amp;page={$this->request['page']}{$post_data[ $displayData['best_answer_post_data']['post']['pid'] ]['post']['PermalinkUrlBit']}#entry{$displayData['best_answer_post_data']['post']['pid']}", "public",'' ), "{$topic['title_seo']}", "showtopic" ) . "'>
					") : ("
						<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showtopic={$topic['tid']}{$post_data[ $displayData['best_answer_post_data']['post']['pid'] ]['post']['PermalinkUrlBit']}#entry{$displayData['best_answer_post_data']['post']['pid']}", "public",'' ), "{$topic['title_seo']}", "showtopic" ) . "'>
					")) . "") : ("
					<a href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=forums&amp;module=forums&amp;section=findpost&amp;pid={$displayData['best_answer_post_data']['post']['pid']}", "public",'' ), "", "" ) . "\">
				")) . "
				<span class='ipsBadge has_icon ipsBadge_light'>{$this->lang->words['answer_gotopost']} <img class='icon' src=\"{$this->settings['img_url']}/right_white_10px.png\"></span></a>
			</div>
		</div>") : ("")) . "
	<div class='controls'>
		<div class='buttons'>
			" . (($displayData['reply_button']['image'] == 'locked') ? ("" . (($displayData['reply_button']['url']) ? ("
					<a href='{$displayData['reply_button']['url']}' accesskey='r' class='button locked'>{$this->lang->words['mobile_top_locked_reply']}</a>
				") : ("
					<span class='button locked'>{$this->lang->words['mobile_top_locked']}</span>
				")) . "") : ("" . (($displayData['reply_button']['image']) ? ("" . (($displayData['reply_button']['url']) ? ("
						<a href='{$displayData['reply_button']['url']}' title='{$this->lang->words['mobile_topic_add_reply']}' accesskey='r' class='button'>{$this->lang->words['mobile_topic_add_reply']}</a>
					") : ("")) . "") : ("")) . "")) . "
		{$topic['SHOW_PAGES']}
		</div>
	</div>
	
	{$displayData['poll_data']['html']}
	
	" . ((is_array( $post_data ) AND count( $post_data )) ? ("
		".$this->__f__241ed7911b9e698a58b83803f3377699($forum,$topic,$post_data,$displayData)."	") : ("")) . "
	" . ((!$forum['disable_sharelinks'] AND $this->settings['sl_enable']) ? ("
		<div id='shareStrip'>
			<a class='button secondary' id='share_facebook_trigger' href='#'>{$this->lang->words['share']} <img src=\"{$this->settings['public_dir']}style_extra/sharelinks/facebook.png\" /></a>
			<a class='button secondary' id='share_twitter_trigger' href='#'>{$this->lang->words['share']} <img src=\"{$this->settings['public_dir']}style_extra/sharelinks/twitter.png\" /></a>
		</div>
	") : ("")) . "
		" . (($displayData['mod_links'] AND ( $this->memberData['is_mod'] OR $this->memberData['member_id'] == $topic['starter_id'] )) ? ("
		<div style='text-align:center'>
			<div id='mobileModShowButton' style='margin: 2px'>
				<a class='button secondary' onclick=\"$('mobileModOptions').show(); $('mobileModShowButton').hide();\">{$this->lang->words['show_moderation_tools']}</a>
			</div>
			<div id='mobileModOptions' style='display:none'>
				".$this->__f__5db70e801650a6ca796c54ff8ca94b74($forum,$topic,$post_data,$displayData)."			</div>
		</div>
	") : ("")) . "
	<div class='controls'>
		<div class='buttons'>
			" . (($displayData['reply_button']['image'] == 'locked') ? ("" . (($displayData['reply_button']['url']) ? ("
					<a href='{$displayData['reply_button']['url']}' accesskey='r' class='button locked'>{$this->lang->words['mobile_top_locked_reply']}</a>
				") : ("
					<span class='button locked'>{$this->lang->words['mobile_top_locked']}</span>
				")) . "") : ("" . (($displayData['reply_button']['image']) ? ("" . (($displayData['reply_button']['url']) ? ("
						<a href='{$displayData['reply_button']['url']}' title='{$this->lang->words['mobile_topic_add_reply']}' accesskey='r' class='button'>{$this->lang->words['mobile_topic_add_reply']}</a>
					") : ("")) . "") : ("")) . "")) . "
		{$topic['SHOW_PAGES']}
		</div>
	</div>
	" . (($displayData['fast_reply'] && $displayData['reply_button']['url']) ? ("<h2>{$this->lang->words['qr_title']}</h2>
		<div class='row'>
			<form action=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "", "public",'' ), "", "" ) . "\" method=\"post\">
				<input type=\"hidden\" name=\"app\" value=\"forums\" />
				<input type=\"hidden\" name=\"module\" value=\"post\" />
				<input type=\"hidden\" name=\"section\" value=\"post\" />
				<input type=\"hidden\" name=\"do\" value=\"reply_post_do\" />
				<input type=\"hidden\" name=\"f\" value=\"{$forum['id']}\" />
				<input type=\"hidden\" name=\"t\" value=\"{$topic['tid']}\" />
				<input type=\"hidden\" name=\"st\" value=\"{$this->request['st']}\" />
				<input type=\"hidden\" name=\"auth_key\" value=\"{$this->member->form_hash}\" />
				<input type=\"hidden\" name=\"fast_reply_used\" value=\"1\" />
				<input type=\"hidden\" name=\"enableemo\" value=\"yes\" />
				<input type=\"hidden\" name=\"enablesig\" value=\"yes\" />
				" . (($this->memberData['auto_track']) ? ("
					<input type=\"hidden\" name=\"enabletrack\" value=\"1\" />
				") : ("
					<input type=\"hidden\" name=\"enabletrack\" value=\"{$topic['_isLiked']}\" />
				")) . "" . ((is_array($topic['_fastReplyStatusMessage']) AND count($topic['_fastReplyStatusMessage']) AND strlen($topic['_fastReplyStatusMessage'][0])) ? ("
					<div class='message'>" . implode( '<br />', $topic['_fastReplyStatusMessage'] ) . "</div>
				") : ("")) . "" . $editor->show('Post', array( 'type' => 'full', 'minimize' => 1, 'isTypingCallBack' => 'ipb.topic.isTypingCallBack', 'height' => 180, 'autoSaveKey' => 'reply-' . $topic[tid], 'warnInfo' => 'fastReply', 'modAll' => $topic['_fastReplyModAll'] ), "")  . "
				<div class=\"buttons\"><input type='submit' name=\"submit\" class='button page-button' value='{$this->lang->words['qr_post']}' tabindex='0' accesskey='s' id='submit_post' /></div>
			</form>
		</div>") : ("")) . "
</div>
<script type=\"text/javascript\">
	document.observe(\"dom:loaded\", function(){
				  	
		" . ((!$forum['disable_sharelinks'] AND $this->settings['sl_enable']) ? ("
			/* Facebook */
			if ( $('share_facebook_trigger') )
			{
				$('share_facebook_trigger').on('click', _fireFacebook );
			}
			
			/* Twitter */
			if ( $('share_twitter_trigger') )
			{
				$('share_twitter_trigger').on('click', _fireTwitter );
			}
		") : ("")) . "
		
	function _fireTwitter(e)
	{
		Event.stop(e);
				
		_url   = '" . $this->registry->output->getCanonicalUrl() . "';
		_title = $$('meta[property~=\"og:title\"]').first().readAttribute('content');
		
		window.open('http://twitter.com/intent/tweet?url=' +  encodeURIComponent( _url ) + '&text=' + encodeURIComponent( _title ) );
	}
	
	function _fireFacebook(e)
	{
		Event.stop(e);
		
		_url   = '" . $this->registry->output->getCanonicalUrl() . "';
		_title = $$('meta[property~=\"og:title\"]').first().readAttribute('content');
		window.open('http://www.facebook.com/sharer.php?u=' + encodeURIComponent( _url ) + '&t=' + encodeURIComponent( _title ) );
	}
	
	" . (($this->request['gopid']) ? ("
		var gopid = \"{$this->request['gopid']}\".replace(/&amp;/g, '');
		window.location.hash = \"entry\" + gopid;
	") : ("")) . "
	" . (($this->request['p']) ? ("" . ((!isset($post_data[$this->request['p']])) ? ("
			window.location = ipb.vars['board_url'] + '/index.php?app=forums&module=forums&section=findpost&pid={$this->request['p']}&t={$topic['tid']}';
		") : ("
			window.location.hash = \"entry{$this->request['p']}\";
		")) . "") : ("")) . "
	});
</script>";
return $IPBHTML;
}


function __f__241ed7911b9e698a58b83803f3377699($forum, $topic, $post_data, $displayData)
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $post_data as $post )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
			" . ( method_exists( $this->registry->getClass('output')->getTemplate('topic'), 'post' ) ? $this->registry->getClass('output')->getTemplate('topic')->post($post, $displayData, $topic, $forum) : '' ) . "
		
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

function __f__5db70e801650a6ca796c54ff8ca94b74($forum, $topic, $post_data, $displayData)
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $displayData['mod_links'] as $_mod_link )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
					" . ((in_array( $_mod_link['option'], array( '05', '15', '16', '00', '01', '02', '03', 'sundelete', '08' ) )) ? ("
						<a href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=forums&amp;module=moderate&amp;section=moderate&amp;t={$topic['tid']}&amp;f={$topic['forum_id']}&amp;page={$this->request['page']}&amp;auth_key={$this->member->form_hash}&amp;_fromTopic=1&amp;do={$_mod_link['option']}", "public",'' ), "", "" ) . "\" class='button secondary' style='margin:2px'>{$_mod_link['value']}</a>
					") : ("")) . "
				
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}


}


/*--------------------------------------------------*/
/* END OF FILE                                      */
/*--------------------------------------------------*/

?>